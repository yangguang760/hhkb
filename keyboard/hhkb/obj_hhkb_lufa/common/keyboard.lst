   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  34:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  35:../../tmk_core/common/keyboard.c **** #endif
  36:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  37:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  38:../../tmk_core/common/keyboard.c **** #endif
  39:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  40:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  41:../../tmk_core/common/keyboard.c **** #endif
  42:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  43:../../tmk_core/common/keyboard.c **** #include "adb.h"
  44:../../tmk_core/common/keyboard.c **** #endif
  45:../../tmk_core/common/keyboard.c **** 
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  48:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  49:../../tmk_core/common/keyboard.c **** {
  50:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  51:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  52:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  53:../../tmk_core/common/keyboard.c ****         return false;
  54:../../tmk_core/common/keyboard.c **** 
  55:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  56:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  57:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  58:../../tmk_core/common/keyboard.c ****             return true;
  59:../../tmk_core/common/keyboard.c ****     }
  60:../../tmk_core/common/keyboard.c ****     return false;
  61:../../tmk_core/common/keyboard.c **** }
  62:../../tmk_core/common/keyboard.c **** #endif
  63:../../tmk_core/common/keyboard.c **** 
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  16               		.loc 1 65 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE103:
  26               		.section	.text.keyboard_setup,"ax",@progbits
  27               	.global	keyboard_setup
  29               	keyboard_setup:
  30               	.LFB104:
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  31               		.loc 1 67 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  37               		.loc 1 68 0
  38 0000 0C94 0000 		jmp matrix_setup
  39               	.LVL0:
  40               		.cfi_endproc
  41               	.LFE104:
  43               		.section	.text.keyboard_init,"ax",@progbits
  44               	.global	keyboard_init
  46               	keyboard_init:
  47               	.LFB105:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  48               		.loc 1 72 0
  49               		.cfi_startproc
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  54               		.loc 1 73 0
  55 0000 0E94 0000 		call timer_init
  56               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  57               		.loc 1 74 0
  58 0004 0E94 0000 		call matrix_init
  59               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  60               		.loc 1 87 0
  61 0008 0C94 0000 		jmp bootmagic
  62               	.LVL3:
  63               		.cfi_endproc
  64               	.LFE105:
  66               		.section	.text.keyboard_set_leds,"ax",@progbits
  67               	.global	keyboard_set_leds
  69               	keyboard_set_leds:
  70               	.LFB107:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 135:../../tmk_core/common/keyboard.c ****                     });
 136:../../tmk_core/common/keyboard.c ****                     // record a processed key
 137:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 138:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 139:../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 140:../../tmk_core/common/keyboard.c ****                 }
 141:../../tmk_core/common/keyboard.c ****             }
 142:../../tmk_core/common/keyboard.c ****         }
 143:../../tmk_core/common/keyboard.c ****     }
 144:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 145:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 146:../../tmk_core/common/keyboard.c **** 
 147:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 148:../../tmk_core/common/keyboard.c **** 
 149:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 150:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 151:../../tmk_core/common/keyboard.c ****     mousekey_task();
 152:../../tmk_core/common/keyboard.c **** #endif
 153:../../tmk_core/common/keyboard.c **** 
 154:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 155:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 156:../../tmk_core/common/keyboard.c **** #endif
 157:../../tmk_core/common/keyboard.c **** 
 158:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 159:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 160:../../tmk_core/common/keyboard.c **** #endif
 161:../../tmk_core/common/keyboard.c **** 
 162:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 163:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 164:../../tmk_core/common/keyboard.c **** #endif
 165:../../tmk_core/common/keyboard.c **** 
 166:../../tmk_core/common/keyboard.c ****     // update LED
 167:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 168:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 169:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 170:../../tmk_core/common/keyboard.c ****     }
 171:../../tmk_core/common/keyboard.c **** }
 172:../../tmk_core/common/keyboard.c **** 
 173:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 174:../../tmk_core/common/keyboard.c **** {
  71               		.loc 1 174 0
  72               		.cfi_startproc
  73               	.LVL4:
  74 0000 CF93      		push r28
  75               	.LCFI0:
  76               		.cfi_def_cfa_offset 3
  77               		.cfi_offset 28, -2
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 1 */
  81               	.L__stack_usage = 1
  82 0002 C82F      		mov r28,r24
 175:../../tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
  83               		.loc 1 175 0
  84 0004 8091 0000 		lds r24,debug_config
  85               	.LVL5:
  86 0008 82FF      		sbrs r24,2
  87 000a 00C0      		rjmp .L6
  88               		.loc 1 175 0 is_stmt 0 discriminator 1
  89 000c 80FF      		sbrs r24,0
  90 000e 00C0      		rjmp .L7
  91 0010 80E0      		ldi r24,lo8(__c.4760)
  92 0012 90E0      		ldi r25,hi8(__c.4760)
  93 0014 0E94 0000 		call xputs
  94               	.LVL6:
  95               	.L7:
  96               		.loc 1 175 0 discriminator 2
  97 0018 8091 0000 		lds r24,debug_config
  98 001c 80FF      		sbrs r24,0
  99 001e 00C0      		rjmp .L8
 100               		.loc 1 175 0 discriminator 1
 101 0020 1F92      		push __zero_reg__
 102               	.LCFI1:
 103               		.cfi_def_cfa_offset 4
 104 0022 CF93      		push r28
 105               	.LCFI2:
 106               		.cfi_def_cfa_offset 5
 107 0024 20E0      		ldi r18,lo8(__c.4762)
 108 0026 30E0      		ldi r19,hi8(__c.4762)
 109 0028 3F93      		push r19
 110               	.LCFI3:
 111               		.cfi_def_cfa_offset 6
 112 002a 2F93      		push r18
 113               	.LCFI4:
 114               		.cfi_def_cfa_offset 7
 115 002c 0E94 0000 		call __xprintf
 116               	.LVL7:
 117 0030 0F90      		pop __tmp_reg__
 118 0032 0F90      		pop __tmp_reg__
 119 0034 0F90      		pop __tmp_reg__
 120 0036 0F90      		pop __tmp_reg__
 121               	.LCFI5:
 122               		.cfi_def_cfa_offset 3
 123               	.L8:
 124               		.loc 1 175 0 discriminator 2
 125 0038 8091 0000 		lds r24,debug_config
 126 003c 80FF      		sbrs r24,0
 127 003e 00C0      		rjmp .L6
 128               		.loc 1 175 0 discriminator 1
 129 0040 80E0      		ldi r24,lo8(__c.4764)
 130 0042 90E0      		ldi r25,hi8(__c.4764)
 131 0044 0E94 0000 		call xputs
 132               	.LVL8:
 133               	.L6:
 176:../../tmk_core/common/keyboard.c ****     led_set(leds);
 134               		.loc 1 176 0 is_stmt 1
 135 0048 8C2F      		mov r24,r28
 136               	/* epilogue start */
 177:../../tmk_core/common/keyboard.c **** }
 137               		.loc 1 177 0
 138 004a CF91      		pop r28
 139               	.LVL9:
 176:../../tmk_core/common/keyboard.c ****     led_set(leds);
 140               		.loc 1 176 0
 141 004c 0C94 0000 		jmp led_set
 142               	.LVL10:
 143               		.cfi_endproc
 144               	.LFE107:
 146               		.section	.text.keyboard_task,"ax",@progbits
 147               	.global	keyboard_task
 149               	keyboard_task:
 150               	.LFB106:
 100:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 151               		.loc 1 100 0
 152               		.cfi_startproc
 153 0000 CF92      		push r12
 154               	.LCFI6:
 155               		.cfi_def_cfa_offset 3
 156               		.cfi_offset 12, -2
 157 0002 DF92      		push r13
 158               	.LCFI7:
 159               		.cfi_def_cfa_offset 4
 160               		.cfi_offset 13, -3
 161 0004 EF92      		push r14
 162               	.LCFI8:
 163               		.cfi_def_cfa_offset 5
 164               		.cfi_offset 14, -4
 165 0006 FF92      		push r15
 166               	.LCFI9:
 167               		.cfi_def_cfa_offset 6
 168               		.cfi_offset 15, -5
 169 0008 0F93      		push r16
 170               	.LCFI10:
 171               		.cfi_def_cfa_offset 7
 172               		.cfi_offset 16, -6
 173 000a 1F93      		push r17
 174               	.LCFI11:
 175               		.cfi_def_cfa_offset 8
 176               		.cfi_offset 17, -7
 177 000c CF93      		push r28
 178               	.LCFI12:
 179               		.cfi_def_cfa_offset 9
 180               		.cfi_offset 28, -8
 181 000e DF93      		push r29
 182               	.LCFI13:
 183               		.cfi_def_cfa_offset 10
 184               		.cfi_offset 29, -9
 185 0010 CDB7      		in r28,__SP_L__
 186 0012 DEB7      		in r29,__SP_H__
 187               	.LCFI14:
 188               		.cfi_def_cfa_register 28
 189 0014 2B97      		sbiw r28,11
 190               	.LCFI15:
 191               		.cfi_def_cfa_offset 21
 192 0016 0FB6      		in __tmp_reg__,__SREG__
 193 0018 F894      		cli
 194 001a DEBF      		out __SP_H__,r29
 195 001c 0FBE      		out __SREG__,__tmp_reg__
 196 001e CDBF      		out __SP_L__,r28
 197               	/* prologue: function */
 198               	/* frame size = 11 */
 199               	/* stack size = 19 */
 200               	.L__stack_usage = 19
 201               	.LVL11:
 109:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 202               		.loc 1 109 0
 203 0020 0E94 0000 		call matrix_scan
 204               	.LVL12:
 205 0024 30E0      		ldi r19,lo8(matrix_prev.4740)
 206 0026 E32E      		mov r14,r19
 207 0028 30E0      		ldi r19,hi8(matrix_prev.4740)
 208 002a F32E      		mov r15,r19
 209 002c 00E0      		ldi r16,0
 210 002e 10E0      		ldi r17,0
 211               	.LVL13:
 212               	.L30:
 213 0030 C02E      		mov r12,r16
 214               	.LVL14:
 215               	.LBB2:
 111:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 216               		.loc 1 111 0
 217 0032 802F      		mov r24,r16
 218 0034 0E94 0000 		call matrix_get_row
 219               	.LVL15:
 112:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 220               		.loc 1 112 0
 221 0038 F701      		movw r30,r14
 222 003a D190      		ld r13,Z+
 223 003c 7F01      		movw r14,r30
 224 003e D826      		eor r13,r24
 225               	.LVL16:
 113:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 226               		.loc 1 113 0
 227 0040 01F4      		brne .L21
 228               	.LVL17:
 229               	.L28:
 230 0042 0F5F      		subi r16,-1
 231 0044 1F4F      		sbci r17,-1
 232               	.LVL18:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 233               		.loc 1 110 0
 234 0046 0830      		cpi r16,8
 235 0048 1105      		cpc r17,__zero_reg__
 236 004a 01F4      		brne .L30
 237               	.LBE2:
 145:../../tmk_core/common/keyboard.c **** 
 238               		.loc 1 145 0
 239 004c 8FEF      		ldi r24,lo8(-1)
 240 004e 8983      		std Y+1,r24
 241 0050 8A83      		std Y+2,r24
 242 0052 1B82      		std Y+3,__zero_reg__
 243 0054 0E94 0000 		call timer_read
 244               	.LVL19:
 245 0058 8160      		ori r24,1
 246 005a 782F      		mov r23,r24
 247 005c 9D83      		std Y+5,r25
 248 005e 8C83      		std Y+4,r24
 249 0060 4981      		ldd r20,Y+1
 250 0062 5A81      		ldd r21,Y+2
 251 0064 6B81      		ldd r22,Y+3
 252 0066 8D81      		ldd r24,Y+5
 253 0068 0E94 0000 		call action_exec
 254               	.LVL20:
 255 006c 00C0      		rjmp .L27
 256               	.LVL21:
 257               	.L21:
 258               	.LBB4:
 128:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 259               		.loc 1 128 0
 260 006e 9091 0000 		lds r25,debug_config
 261 0072 91FF      		sbrs r25,1
 262 0074 00C0      		rjmp .L24
 128:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 263               		.loc 1 128 0 is_stmt 0 discriminator 1
 264 0076 8B87      		std Y+11,r24
 265 0078 0E94 0000 		call matrix_print
 266               	.LVL22:
 267 007c 8B85      		ldd r24,Y+11
 268               	.L24:
 269               	.LVL23:
 270               	.LBE4:
 109:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 271               		.loc 1 109 0 is_stmt 1
 272 007e 20E0      		ldi r18,0
 273 0080 30E0      		ldi r19,0
 274               	.LBB5:
 275               	.LBB3:
 130:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 276               		.loc 1 130 0
 277 0082 4D2D      		mov r20,r13
 278 0084 50E0      		ldi r21,0
 279               	.LVL24:
 280               	.L29:
 281 0086 922F      		mov r25,r18
 282               	.LVL25:
 283 0088 BA01      		movw r22,r20
 284 008a 022E      		mov r0,r18
 285 008c 00C0      		rjmp 2f
 286               		1:
 287 008e 7595      		asr r23
 288 0090 6795      		ror r22
 289               		2:
 290 0092 0A94      		dec r0
 291 0094 02F4      		brpl 1b
 292 0096 60FF      		sbrs r22,0
 293 0098 00C0      		rjmp .L25
 131:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 294               		.loc 1 131 0
 295 009a 2E83      		std Y+6,r18
 296 009c CF82      		std Y+7,r12
 133:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 297               		.loc 1 133 0
 298 009e EE24      		clr r14
 299 00a0 E394      		inc r14
 300 00a2 F12C      		mov r15,__zero_reg__
 301               	.LVL26:
 302 00a4 00C0      		rjmp 2f
 303               		1:
 304 00a6 EE0C      		lsl r14
 305 00a8 FF1C      		rol r15
 306               		2:
 307 00aa 9A95      		dec r25
 308 00ac 02F4      		brpl 1b
 309 00ae 90E0      		ldi r25,0
 310 00b0 8E21      		and r24,r14
 311 00b2 9F21      		and r25,r15
 312 00b4 21E0      		ldi r18,lo8(1)
 313 00b6 892B      		or r24,r25
 314 00b8 01F4      		brne .L26
 315 00ba 20E0      		ldi r18,0
 316               	.L26:
 131:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 317               		.loc 1 131 0
 318 00bc 2887      		std Y+8,r18
 134:../../tmk_core/common/keyboard.c ****                     });
 319               		.loc 1 134 0
 320 00be 0E94 0000 		call timer_read
 321               	.LVL27:
 322 00c2 8160      		ori r24,1
 131:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 323               		.loc 1 131 0
 324 00c4 782F      		mov r23,r24
 325 00c6 9A87      		std Y+10,r25
 326 00c8 8987      		std Y+9,r24
 327 00ca 4E81      		ldd r20,Y+6
 328 00cc 5F81      		ldd r21,Y+7
 329 00ce 6885      		ldd r22,Y+8
 330 00d0 8A85      		ldd r24,Y+10
 331 00d2 0E94 0000 		call action_exec
 332               	.LVL28:
 137:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 333               		.loc 1 137 0
 334 00d6 F801      		movw r30,r16
 335 00d8 E050      		subi r30,lo8(-(matrix_prev.4740))
 336 00da F040      		sbci r31,hi8(-(matrix_prev.4740))
 337 00dc 8081      		ld r24,Z
 338 00de 8E25      		eor r24,r14
 339 00e0 8083      		st Z,r24
 139:../../tmk_core/common/keyboard.c ****                 }
 340               		.loc 1 139 0
 341 00e2 00C0      		rjmp .L27
 342               	.LVL29:
 343               	.L25:
 344 00e4 2F5F      		subi r18,-1
 345 00e6 3F4F      		sbci r19,-1
 346               	.LVL30:
 129:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 347               		.loc 1 129 0
 348 00e8 2830      		cpi r18,8
 349 00ea 3105      		cpc r19,__zero_reg__
 350 00ec 01F4      		brne .L29
 351 00ee 00C0      		rjmp .L28
 352               	.LVL31:
 353               	.L27:
 354               	.LBE3:
 355               	.LBE5:
 151:../../tmk_core/common/keyboard.c **** #endif
 356               		.loc 1 151 0
 357 00f0 0E94 0000 		call mousekey_task
 358               	.LVL32:
 167:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 359               		.loc 1 167 0
 360 00f4 1091 0000 		lds r17,led_status.4741
 361 00f8 0E94 0000 		call host_keyboard_leds
 362               	.LVL33:
 363 00fc 1817      		cp r17,r24
 364 00fe 01F0      		breq .L20
 168:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 365               		.loc 1 168 0
 366 0100 0E94 0000 		call host_keyboard_leds
 367               	.LVL34:
 368 0104 8093 0000 		sts led_status.4741,r24
 369               	/* epilogue start */
 171:../../tmk_core/common/keyboard.c **** 
 370               		.loc 1 171 0
 371 0108 2B96      		adiw r28,11
 372 010a 0FB6      		in __tmp_reg__,__SREG__
 373 010c F894      		cli
 374 010e DEBF      		out __SP_H__,r29
 375 0110 0FBE      		out __SREG__,__tmp_reg__
 376 0112 CDBF      		out __SP_L__,r28
 377 0114 DF91      		pop r29
 378 0116 CF91      		pop r28
 379 0118 1F91      		pop r17
 380 011a 0F91      		pop r16
 381 011c FF90      		pop r15
 382 011e EF90      		pop r14
 383 0120 DF90      		pop r13
 384               	.LVL35:
 385 0122 CF90      		pop r12
 169:../../tmk_core/common/keyboard.c ****     }
 386               		.loc 1 169 0
 387 0124 0C94 0000 		jmp keyboard_set_leds
 388               	.LVL36:
 389               	.L20:
 390               	/* epilogue start */
 171:../../tmk_core/common/keyboard.c **** 
 391               		.loc 1 171 0
 392 0128 2B96      		adiw r28,11
 393 012a 0FB6      		in __tmp_reg__,__SREG__
 394 012c F894      		cli
 395 012e DEBF      		out __SP_H__,r29
 396 0130 0FBE      		out __SREG__,__tmp_reg__
 397 0132 CDBF      		out __SP_L__,r28
 398 0134 DF91      		pop r29
 399 0136 CF91      		pop r28
 400 0138 1F91      		pop r17
 401 013a 0F91      		pop r16
 402 013c FF90      		pop r15
 403 013e EF90      		pop r14
 404 0140 DF90      		pop r13
 405               	.LVL37:
 406 0142 CF90      		pop r12
 407 0144 0895      		ret
 408               		.cfi_endproc
 409               	.LFE106:
 411               		.section	.progmem.data.__c.4764,"a",@progbits
 414               	__c.4764:
 415 0000 0A00      		.string	"\n"
 416               		.section	.progmem.data.__c.4762,"a",@progbits
 419               	__c.4762:
 420 0000 2530 3258 		.string	"%02X"
 420      00
 421               		.section	.progmem.data.__c.4760,"a",@progbits
 424               	__c.4760:
 425 0000 6B65 7962 		.string	"keyboard_set_led: "
 425      6F61 7264 
 425      5F73 6574 
 425      5F6C 6564 
 425      3A20 00
 426               		.section	.bss.led_status.4741,"aw",@nobits
 429               	led_status.4741:
 430 0000 00        		.zero	1
 431               		.section	.bss.matrix_prev.4740,"aw",@nobits
 434               	matrix_prev.4740:
 435 0000 0000 0000 		.zero	8
 435      0000 0000 
 436               		.comm	keymap_config,1,1
 437               		.text
 438               	.Letext0:
 439               		.file 2 "/usr/lib/avr/include/stdint.h"
 440               		.file 3 "../../tmk_core/common/keyboard.h"
 441               		.file 4 "../../tmk_core/common/matrix.h"
 442               		.file 5 "../../tmk_core/common/keymap.h"
 443               		.file 6 "../../tmk_core/common/debug.h"
 444               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 445               		.file 8 "../../tmk_core/common/timer.h"
 446               		.file 9 "../../tmk_core/common/bootmagic.h"
 447               		.file 10 "../../tmk_core/common/avr/xprintf.h"
 448               		.file 11 "../../tmk_core/common/led.h"
 449               		.file 12 "../../tmk_core/common/action.h"
 450               		.file 13 "../../tmk_core/common/mousekey.h"
 451               		.file 14 "../../tmk_core/common/host.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/cc4Qg4je.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc4Qg4je.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc4Qg4je.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc4Qg4je.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc4Qg4je.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc4Qg4je.s:13     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/cc4Qg4je.s:29     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/cc4Qg4je.s:46     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/cc4Qg4je.s:69     .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
     /tmp/cc4Qg4je.s:424    .progmem.data.__c.4760:0000000000000000 __c.4760
     /tmp/cc4Qg4je.s:419    .progmem.data.__c.4762:0000000000000000 __c.4762
     /tmp/cc4Qg4je.s:414    .progmem.data.__c.4764:0000000000000000 __c.4764
     /tmp/cc4Qg4je.s:149    .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/cc4Qg4je.s:434    .bss.matrix_prev.4740:0000000000000000 matrix_prev.4740
     /tmp/cc4Qg4je.s:429    .bss.led_status.4741:0000000000000000 led_status.4741
                            *COM*:0000000000000001 keymap_config

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
timer_read
action_exec
matrix_print
mousekey_task
host_keyboard_leds
__do_clear_bss
