   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  34:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  35:../../tmk_core/common/keyboard.c **** #endif
  36:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  37:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  38:../../tmk_core/common/keyboard.c **** #endif
  39:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  40:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  41:../../tmk_core/common/keyboard.c **** #endif
  42:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  43:../../tmk_core/common/keyboard.c **** #include "adb.h"
  44:../../tmk_core/common/keyboard.c **** #endif
  45:../../tmk_core/common/keyboard.c **** 
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  48:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  49:../../tmk_core/common/keyboard.c **** {
  50:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  51:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  52:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  53:../../tmk_core/common/keyboard.c ****         return false;
  54:../../tmk_core/common/keyboard.c **** 
  55:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  56:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  57:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  58:../../tmk_core/common/keyboard.c ****             return true;
  59:../../tmk_core/common/keyboard.c ****     }
  60:../../tmk_core/common/keyboard.c ****     return false;
  61:../../tmk_core/common/keyboard.c **** }
  62:../../tmk_core/common/keyboard.c **** #endif
  63:../../tmk_core/common/keyboard.c **** 
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  16               		.loc 1 65 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE103:
  26               		.section	.text.keyboard_setup,"ax",@progbits
  27               	.global	keyboard_setup
  29               	keyboard_setup:
  30               	.LFB104:
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  31               		.loc 1 67 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  37               		.loc 1 68 0
  38 0000 0C94 0000 		jmp matrix_setup
  39               	.LVL0:
  40               		.cfi_endproc
  41               	.LFE104:
  43               		.section	.text.keyboard_init,"ax",@progbits
  44               	.global	keyboard_init
  46               	keyboard_init:
  47               	.LFB105:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  48               		.loc 1 72 0
  49               		.cfi_startproc
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  54               		.loc 1 73 0
  55 0000 0E94 0000 		call timer_init
  56               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  57               		.loc 1 74 0
  58 0004 0E94 0000 		call matrix_init
  59               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  60               		.loc 1 87 0
  61 0008 0C94 0000 		jmp bootmagic
  62               	.LVL3:
  63               		.cfi_endproc
  64               	.LFE105:
  66               		.section	.text.keyboard_set_leds,"ax",@progbits
  67               	.global	keyboard_set_leds
  69               	keyboard_set_leds:
  70               	.LFB107:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 135:../../tmk_core/common/keyboard.c ****                     });
 136:../../tmk_core/common/keyboard.c ****                     // record a processed key
 137:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 138:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 139:../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 140:../../tmk_core/common/keyboard.c ****                 }
 141:../../tmk_core/common/keyboard.c ****             }
 142:../../tmk_core/common/keyboard.c ****         }
 143:../../tmk_core/common/keyboard.c ****     }
 144:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 145:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 146:../../tmk_core/common/keyboard.c **** 
 147:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 148:../../tmk_core/common/keyboard.c **** 
 149:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 150:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 151:../../tmk_core/common/keyboard.c ****     mousekey_task();
 152:../../tmk_core/common/keyboard.c **** #endif
 153:../../tmk_core/common/keyboard.c **** 
 154:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 155:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 156:../../tmk_core/common/keyboard.c **** #endif
 157:../../tmk_core/common/keyboard.c **** 
 158:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 159:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 160:../../tmk_core/common/keyboard.c **** #endif
 161:../../tmk_core/common/keyboard.c **** 
 162:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 163:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 164:../../tmk_core/common/keyboard.c **** #endif
 165:../../tmk_core/common/keyboard.c **** 
 166:../../tmk_core/common/keyboard.c ****     // update LED
 167:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 168:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 169:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 170:../../tmk_core/common/keyboard.c ****     }
 171:../../tmk_core/common/keyboard.c **** }
 172:../../tmk_core/common/keyboard.c **** 
 173:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 174:../../tmk_core/common/keyboard.c **** {
  71               		.loc 1 174 0
  72               		.cfi_startproc
  73               	.LVL4:
  74 0000 CF93      		push r28
  75               	.LCFI0:
  76               		.cfi_def_cfa_offset 3
  77               		.cfi_offset 28, -2
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 1 */
  81               	.L__stack_usage = 1
  82 0002 C82F      		mov r28,r24
 175:../../tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
  83               		.loc 1 175 0
  84 0004 8091 0000 		lds r24,debug_config
  85               	.LVL5:
  86 0008 82FF      		sbrs r24,2
  87 000a 00C0      		rjmp .L6
  88               		.loc 1 175 0 is_stmt 0 discriminator 1
  89 000c 80FF      		sbrs r24,0
  90 000e 00C0      		rjmp .L7
  91               		.loc 1 175 0 discriminator 2
  92 0010 80E0      		ldi r24,lo8(__c.4780)
  93 0012 90E0      		ldi r25,hi8(__c.4780)
  94 0014 0E94 0000 		call xputs
  95               	.LVL6:
  96               	.L7:
  97               		.loc 1 175 0 discriminator 4
  98 0018 8091 0000 		lds r24,debug_config
  99 001c 80FF      		sbrs r24,0
 100 001e 00C0      		rjmp .L8
 101               		.loc 1 175 0 discriminator 5
 102 0020 1F92      		push __zero_reg__
 103               	.LCFI1:
 104               		.cfi_def_cfa_offset 4
 105 0022 CF93      		push r28
 106               	.LCFI2:
 107               		.cfi_def_cfa_offset 5
 108 0024 80E0      		ldi r24,lo8(__c.4782)
 109 0026 90E0      		ldi r25,hi8(__c.4782)
 110 0028 9F93      		push r25
 111               	.LCFI3:
 112               		.cfi_def_cfa_offset 6
 113 002a 8F93      		push r24
 114               	.LCFI4:
 115               		.cfi_def_cfa_offset 7
 116 002c 0E94 0000 		call __xprintf
 117               	.LVL7:
 118 0030 0F90      		pop __tmp_reg__
 119 0032 0F90      		pop __tmp_reg__
 120 0034 0F90      		pop __tmp_reg__
 121 0036 0F90      		pop __tmp_reg__
 122               	.LCFI5:
 123               		.cfi_def_cfa_offset 3
 124               	.L8:
 125               		.loc 1 175 0 discriminator 7
 126 0038 8091 0000 		lds r24,debug_config
 127 003c 80FF      		sbrs r24,0
 128 003e 00C0      		rjmp .L6
 129               		.loc 1 175 0 discriminator 8
 130 0040 80E0      		ldi r24,lo8(__c.4784)
 131 0042 90E0      		ldi r25,hi8(__c.4784)
 132 0044 0E94 0000 		call xputs
 133               	.LVL8:
 134               	.L6:
 176:../../tmk_core/common/keyboard.c ****     led_set(leds);
 135               		.loc 1 176 0 is_stmt 1
 136 0048 8C2F      		mov r24,r28
 137               	/* epilogue start */
 177:../../tmk_core/common/keyboard.c **** }
 138               		.loc 1 177 0
 139 004a CF91      		pop r28
 140               	.LVL9:
 176:../../tmk_core/common/keyboard.c ****     led_set(leds);
 141               		.loc 1 176 0
 142 004c 0C94 0000 		jmp led_set
 143               	.LVL10:
 144               		.cfi_endproc
 145               	.LFE107:
 147               		.section	.text.keyboard_task,"ax",@progbits
 148               	.global	keyboard_task
 150               	keyboard_task:
 151               	.LFB106:
 100:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 152               		.loc 1 100 0
 153               		.cfi_startproc
 154 0000 CF92      		push r12
 155               	.LCFI6:
 156               		.cfi_def_cfa_offset 3
 157               		.cfi_offset 12, -2
 158 0002 DF92      		push r13
 159               	.LCFI7:
 160               		.cfi_def_cfa_offset 4
 161               		.cfi_offset 13, -3
 162 0004 EF92      		push r14
 163               	.LCFI8:
 164               		.cfi_def_cfa_offset 5
 165               		.cfi_offset 14, -4
 166 0006 FF92      		push r15
 167               	.LCFI9:
 168               		.cfi_def_cfa_offset 6
 169               		.cfi_offset 15, -5
 170 0008 0F93      		push r16
 171               	.LCFI10:
 172               		.cfi_def_cfa_offset 7
 173               		.cfi_offset 16, -6
 174 000a 1F93      		push r17
 175               	.LCFI11:
 176               		.cfi_def_cfa_offset 8
 177               		.cfi_offset 17, -7
 178 000c CF93      		push r28
 179               	.LCFI12:
 180               		.cfi_def_cfa_offset 9
 181               		.cfi_offset 28, -8
 182 000e DF93      		push r29
 183               	.LCFI13:
 184               		.cfi_def_cfa_offset 10
 185               		.cfi_offset 29, -9
 186 0010 CDB7      		in r28,__SP_L__
 187 0012 DEB7      		in r29,__SP_H__
 188               	.LCFI14:
 189               		.cfi_def_cfa_register 28
 190 0014 2B97      		sbiw r28,11
 191               	.LCFI15:
 192               		.cfi_def_cfa_offset 21
 193 0016 0FB6      		in __tmp_reg__,__SREG__
 194 0018 F894      		cli
 195 001a DEBF      		out __SP_H__,r29
 196 001c 0FBE      		out __SREG__,__tmp_reg__
 197 001e CDBF      		out __SP_L__,r28
 198               	/* prologue: function */
 199               	/* frame size = 11 */
 200               	/* stack size = 19 */
 201               	.L__stack_usage = 19
 202               	.LVL11:
 109:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 203               		.loc 1 109 0
 204 0020 0E94 0000 		call matrix_scan
 205               	.LVL12:
 206 0024 80E0      		ldi r24,lo8(matrix_prev.4760)
 207 0026 C82E      		mov r12,r24
 208 0028 80E0      		ldi r24,hi8(matrix_prev.4760)
 209 002a D82E      		mov r13,r24
 210 002c 00E0      		ldi r16,0
 211 002e 10E0      		ldi r17,0
 212               	.LVL13:
 213               	.L22:
 214 0030 E02E      		mov r14,r16
 215               	.LVL14:
 216               	.LBB2:
 111:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 217               		.loc 1 111 0
 218 0032 802F      		mov r24,r16
 219 0034 0E94 0000 		call matrix_get_row
 220               	.LVL15:
 112:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 221               		.loc 1 112 0
 222 0038 F601      		movw r30,r12
 223 003a 4191      		ld r20,Z+
 224 003c 6F01      		movw r12,r30
 225 003e F42E      		mov r15,r20
 226 0040 F826      		eor r15,r24
 227               	.LVL16:
 113:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 228               		.loc 1 113 0
 229 0042 01F4      		brne .L21
 230               	.LVL17:
 231               	.L29:
 232 0044 0F5F      		subi r16,-1
 233 0046 1F4F      		sbci r17,-1
 234               	.LVL18:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 235               		.loc 1 110 0
 236 0048 0830      		cpi r16,8
 237 004a 1105      		cpc r17,__zero_reg__
 238 004c 01F4      		brne .L22
 239               	.LBE2:
 145:../../tmk_core/common/keyboard.c **** 
 240               		.loc 1 145 0
 241 004e 8FEF      		ldi r24,lo8(-1)
 242 0050 8983      		std Y+1,r24
 243 0052 8A83      		std Y+2,r24
 244 0054 1B82      		std Y+3,__zero_reg__
 245 0056 0E94 0000 		call timer_read
 246               	.LVL19:
 247 005a 8160      		ori r24,1
 248 005c 782F      		mov r23,r24
 249 005e 9D83      		std Y+5,r25
 250 0060 8C83      		std Y+4,r24
 251 0062 4981      		ldd r20,Y+1
 252 0064 5A81      		ldd r21,Y+2
 253 0066 6B81      		ldd r22,Y+3
 254 0068 8D81      		ldd r24,Y+5
 255 006a 0E94 0000 		call action_exec
 256               	.LVL20:
 257 006e 00C0      		rjmp .L27
 258               	.LVL21:
 259               	.L21:
 260               	.LBB4:
 128:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 261               		.loc 1 128 0
 262 0070 9091 0000 		lds r25,debug_config
 263 0074 91FF      		sbrs r25,1
 264 0076 00C0      		rjmp .L24
 128:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 265               		.loc 1 128 0 is_stmt 0 discriminator 1
 266 0078 8B87      		std Y+11,r24
 267 007a 0E94 0000 		call matrix_print
 268               	.LVL22:
 269 007e 8B85      		ldd r24,Y+11
 270               	.L24:
 271               	.LVL23:
 272               	.LBE4:
 109:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 273               		.loc 1 109 0 is_stmt 1
 274 0080 20E0      		ldi r18,0
 275 0082 30E0      		ldi r19,0
 276               	.LBB5:
 277               	.LBB3:
 130:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 278               		.loc 1 130 0
 279 0084 4F2D      		mov r20,r15
 280 0086 50E0      		ldi r21,0
 281               	.LVL24:
 282               	.L28:
 283 0088 922F      		mov r25,r18
 284               	.LVL25:
 285 008a BA01      		movw r22,r20
 286 008c 022E      		mov r0,r18
 287 008e 00C0      		rjmp 2f
 288               		1:
 289 0090 7595      		asr r23
 290 0092 6795      		ror r22
 291               		2:
 292 0094 0A94      		dec r0
 293 0096 02F4      		brpl 1b
 294 0098 60FF      		sbrs r22,0
 295 009a 00C0      		rjmp .L25
 131:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 296               		.loc 1 131 0
 297 009c 2E83      		std Y+6,r18
 298 009e EF82      		std Y+7,r14
 133:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 299               		.loc 1 133 0
 300 00a0 21E0      		ldi r18,lo8(1)
 301 00a2 30E0      		ldi r19,0
 302               	.LVL26:
 303 00a4 6901      		movw r12,r18
 304 00a6 00C0      		rjmp 2f
 305               		1:
 306 00a8 CC0C      		lsl r12
 307 00aa DD1C      		rol r13
 308               		2:
 309 00ac 9A95      		dec r25
 310 00ae 02F4      		brpl 1b
 311 00b0 90E0      		ldi r25,0
 312 00b2 8C21      		and r24,r12
 313 00b4 9D21      		and r25,r13
 314 00b6 892B      		or r24,r25
 315 00b8 01F4      		brne .L26
 316 00ba 20E0      		ldi r18,0
 317               	.L26:
 131:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 318               		.loc 1 131 0
 319 00bc 2887      		std Y+8,r18
 134:../../tmk_core/common/keyboard.c ****                     });
 320               		.loc 1 134 0
 321 00be 0E94 0000 		call timer_read
 322               	.LVL27:
 323 00c2 8160      		ori r24,1
 131:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 324               		.loc 1 131 0
 325 00c4 782F      		mov r23,r24
 326 00c6 9A87      		std Y+10,r25
 327 00c8 8987      		std Y+9,r24
 328 00ca 4E81      		ldd r20,Y+6
 329 00cc 5F81      		ldd r21,Y+7
 330 00ce 6885      		ldd r22,Y+8
 331 00d0 8A85      		ldd r24,Y+10
 332 00d2 0E94 0000 		call action_exec
 333               	.LVL28:
 137:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 334               		.loc 1 137 0
 335 00d6 F801      		movw r30,r16
 336 00d8 E050      		subi r30,lo8(-(matrix_prev.4760))
 337 00da F040      		sbci r31,hi8(-(matrix_prev.4760))
 338 00dc 8081      		ld r24,Z
 339 00de C826      		eor r12,r24
 340 00e0 C082      		st Z,r12
 139:../../tmk_core/common/keyboard.c ****                 }
 341               		.loc 1 139 0
 342 00e2 00C0      		rjmp .L27
 343               	.LVL29:
 344               	.L25:
 345 00e4 2F5F      		subi r18,-1
 346 00e6 3F4F      		sbci r19,-1
 347               	.LVL30:
 129:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 348               		.loc 1 129 0 discriminator 2
 349 00e8 2830      		cpi r18,8
 350 00ea 3105      		cpc r19,__zero_reg__
 351 00ec 01F4      		brne .L28
 352 00ee 00C0      		rjmp .L29
 353               	.LVL31:
 354               	.L27:
 355               	.LBE3:
 356               	.LBE5:
 151:../../tmk_core/common/keyboard.c **** #endif
 357               		.loc 1 151 0
 358 00f0 0E94 0000 		call mousekey_task
 359               	.LVL32:
 167:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 360               		.loc 1 167 0
 361 00f4 1091 0000 		lds r17,led_status.4761
 362 00f8 0E94 0000 		call host_keyboard_leds
 363               	.LVL33:
 364 00fc 1817      		cp r17,r24
 365 00fe 01F0      		breq .L20
 168:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 366               		.loc 1 168 0
 367 0100 0E94 0000 		call host_keyboard_leds
 368               	.LVL34:
 369 0104 8093 0000 		sts led_status.4761,r24
 370               	/* epilogue start */
 171:../../tmk_core/common/keyboard.c **** 
 371               		.loc 1 171 0
 372 0108 2B96      		adiw r28,11
 373 010a 0FB6      		in __tmp_reg__,__SREG__
 374 010c F894      		cli
 375 010e DEBF      		out __SP_H__,r29
 376 0110 0FBE      		out __SREG__,__tmp_reg__
 377 0112 CDBF      		out __SP_L__,r28
 378 0114 DF91      		pop r29
 379 0116 CF91      		pop r28
 380 0118 1F91      		pop r17
 381 011a 0F91      		pop r16
 382 011c FF90      		pop r15
 383               	.LVL35:
 384 011e EF90      		pop r14
 385 0120 DF90      		pop r13
 386 0122 CF90      		pop r12
 169:../../tmk_core/common/keyboard.c ****     }
 387               		.loc 1 169 0
 388 0124 0C94 0000 		jmp keyboard_set_leds
 389               	.LVL36:
 390               	.L20:
 391               	/* epilogue start */
 171:../../tmk_core/common/keyboard.c **** 
 392               		.loc 1 171 0
 393 0128 2B96      		adiw r28,11
 394 012a 0FB6      		in __tmp_reg__,__SREG__
 395 012c F894      		cli
 396 012e DEBF      		out __SP_H__,r29
 397 0130 0FBE      		out __SREG__,__tmp_reg__
 398 0132 CDBF      		out __SP_L__,r28
 399 0134 DF91      		pop r29
 400 0136 CF91      		pop r28
 401 0138 1F91      		pop r17
 402 013a 0F91      		pop r16
 403 013c FF90      		pop r15
 404               	.LVL37:
 405 013e EF90      		pop r14
 406 0140 DF90      		pop r13
 407 0142 CF90      		pop r12
 408 0144 0895      		ret
 409               		.cfi_endproc
 410               	.LFE106:
 412               		.section	.progmem.data.__c.4784,"a",@progbits
 415               	__c.4784:
 416 0000 0A00      		.string	"\n"
 417               		.section	.progmem.data.__c.4782,"a",@progbits
 420               	__c.4782:
 421 0000 2530 3258 		.string	"%02X"
 421      00
 422               		.section	.progmem.data.__c.4780,"a",@progbits
 425               	__c.4780:
 426 0000 6B65 7962 		.string	"keyboard_set_led: "
 426      6F61 7264 
 426      5F73 6574 
 426      5F6C 6564 
 426      3A20 00
 427               		.section	.bss.led_status.4761,"aw",@nobits
 430               	led_status.4761:
 431 0000 00        		.zero	1
 432               		.section	.bss.matrix_prev.4760,"aw",@nobits
 435               	matrix_prev.4760:
 436 0000 0000 0000 		.zero	8
 436      0000 0000 
 437               		.comm	keymap_config,1,1
 438               		.text
 439               	.Letext0:
 440               		.file 2 "/usr/lib/avr/include/stdint.h"
 441               		.file 3 "../../tmk_core/common/keyboard.h"
 442               		.file 4 "../../tmk_core/common/matrix.h"
 443               		.file 5 "../../tmk_core/common/keymap.h"
 444               		.file 6 "../../tmk_core/common/debug.h"
 445               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 446               		.file 8 "../../tmk_core/common/timer.h"
 447               		.file 9 "../../tmk_core/common/bootmagic.h"
 448               		.file 10 "../../tmk_core/common/avr/xprintf.h"
 449               		.file 11 "../../tmk_core/common/led.h"
 450               		.file 12 "../../tmk_core/common/action.h"
 451               		.file 13 "../../tmk_core/common/mousekey.h"
 452               		.file 14 "../../tmk_core/common/host.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/cccAWHbe.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cccAWHbe.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cccAWHbe.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cccAWHbe.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cccAWHbe.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cccAWHbe.s:13     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/cccAWHbe.s:29     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/cccAWHbe.s:46     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/cccAWHbe.s:69     .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
     /tmp/cccAWHbe.s:425    .progmem.data.__c.4780:0000000000000000 __c.4780
     /tmp/cccAWHbe.s:420    .progmem.data.__c.4782:0000000000000000 __c.4782
     /tmp/cccAWHbe.s:415    .progmem.data.__c.4784:0000000000000000 __c.4784
     /tmp/cccAWHbe.s:150    .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/cccAWHbe.s:435    .bss.matrix_prev.4760:0000000000000000 matrix_prev.4760
     /tmp/cccAWHbe.s:430    .bss.led_status.4761:0000000000000000 led_status.4761
                            *COM*:0000000000000001 keymap_config

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
timer_read
action_exec
matrix_print
mousekey_task
host_keyboard_leds
__do_clear_bss
