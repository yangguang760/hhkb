   1               		.file	"action_tapping.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.debug_waiting_buffer,"ax",@progbits
  12               	debug_waiting_buffer:
  13               	.LFB12:
  14               		.file 1 "../../tmk_core/common/action_tapping.c"
   1:../../tmk_core/common/action_tapping.c **** #include <stdint.h>
   2:../../tmk_core/common/action_tapping.c **** #include <stdbool.h>
   3:../../tmk_core/common/action_tapping.c **** #include "action.h"
   4:../../tmk_core/common/action_tapping.c **** #include "action_layer.h"
   5:../../tmk_core/common/action_tapping.c **** #include "action_tapping.h"
   6:../../tmk_core/common/action_tapping.c **** #include "keycode.h"
   7:../../tmk_core/common/action_tapping.c **** #include "timer.h"
   8:../../tmk_core/common/action_tapping.c **** 
   9:../../tmk_core/common/action_tapping.c **** #ifdef DEBUG_ACTION
  10:../../tmk_core/common/action_tapping.c **** #include "debug.h"
  11:../../tmk_core/common/action_tapping.c **** #else
  12:../../tmk_core/common/action_tapping.c **** #include "nodebug.h"
  13:../../tmk_core/common/action_tapping.c **** #endif
  14:../../tmk_core/common/action_tapping.c **** 
  15:../../tmk_core/common/action_tapping.c **** #ifndef NO_ACTION_TAPPING
  16:../../tmk_core/common/action_tapping.c **** 
  17:../../tmk_core/common/action_tapping.c **** #define IS_TAPPING()            !IS_NOEVENT(tapping_key.event)
  18:../../tmk_core/common/action_tapping.c **** #define IS_TAPPING_PRESSED()    (IS_TAPPING() && tapping_key.event.pressed)
  19:../../tmk_core/common/action_tapping.c **** #define IS_TAPPING_RELEASED()   (IS_TAPPING() && !tapping_key.event.pressed)
  20:../../tmk_core/common/action_tapping.c **** #define IS_TAPPING_KEY(k)       (IS_TAPPING() && KEYEQ(tapping_key.event.key, (k)))
  21:../../tmk_core/common/action_tapping.c **** #define WITHIN_TAPPING_TERM(e)  (TIMER_DIFF_16(e.time, tapping_key.event.time) < TAPPING_TERM)
  22:../../tmk_core/common/action_tapping.c **** 
  23:../../tmk_core/common/action_tapping.c **** 
  24:../../tmk_core/common/action_tapping.c **** static keyrecord_t tapping_key = {};
  25:../../tmk_core/common/action_tapping.c **** static keyrecord_t waiting_buffer[WAITING_BUFFER_SIZE] = {};
  26:../../tmk_core/common/action_tapping.c **** static uint8_t waiting_buffer_head = 0;
  27:../../tmk_core/common/action_tapping.c **** static uint8_t waiting_buffer_tail = 0;
  28:../../tmk_core/common/action_tapping.c **** 
  29:../../tmk_core/common/action_tapping.c **** static bool process_tapping(keyrecord_t *record);
  30:../../tmk_core/common/action_tapping.c **** static bool waiting_buffer_enq(keyrecord_t record);
  31:../../tmk_core/common/action_tapping.c **** static void waiting_buffer_clear(void);
  32:../../tmk_core/common/action_tapping.c **** static bool waiting_buffer_typed(keyevent_t event);
  33:../../tmk_core/common/action_tapping.c **** static bool waiting_buffer_has_anykey_pressed(void);
  34:../../tmk_core/common/action_tapping.c **** static void waiting_buffer_scan_tap(void);
  35:../../tmk_core/common/action_tapping.c **** static void debug_tapping_key(void);
  36:../../tmk_core/common/action_tapping.c **** static void debug_waiting_buffer(void);
  37:../../tmk_core/common/action_tapping.c **** 
  38:../../tmk_core/common/action_tapping.c **** 
  39:../../tmk_core/common/action_tapping.c **** void action_tapping_process(keyrecord_t record)
  40:../../tmk_core/common/action_tapping.c **** {
  41:../../tmk_core/common/action_tapping.c ****     if (process_tapping(&record)) {
  42:../../tmk_core/common/action_tapping.c ****         if (!IS_NOEVENT(record.event)) {
  43:../../tmk_core/common/action_tapping.c ****             debug("processed: "); debug_record(record); debug("\n");
  44:../../tmk_core/common/action_tapping.c ****         }
  45:../../tmk_core/common/action_tapping.c ****     } else {
  46:../../tmk_core/common/action_tapping.c ****         if (!waiting_buffer_enq(record)) {
  47:../../tmk_core/common/action_tapping.c ****             // clear all in case of overflow.
  48:../../tmk_core/common/action_tapping.c ****             debug("OVERFLOW: CLEAR ALL STATES\n");
  49:../../tmk_core/common/action_tapping.c ****             clear_keyboard();
  50:../../tmk_core/common/action_tapping.c ****             waiting_buffer_clear();
  51:../../tmk_core/common/action_tapping.c ****             tapping_key = (keyrecord_t){};
  52:../../tmk_core/common/action_tapping.c ****         }
  53:../../tmk_core/common/action_tapping.c ****     }
  54:../../tmk_core/common/action_tapping.c **** 
  55:../../tmk_core/common/action_tapping.c ****     // process waiting_buffer
  56:../../tmk_core/common/action_tapping.c ****     if (!IS_NOEVENT(record.event) && waiting_buffer_head != waiting_buffer_tail) {
  57:../../tmk_core/common/action_tapping.c ****         debug("---- action_exec: process waiting_buffer -----\n");
  58:../../tmk_core/common/action_tapping.c ****     }
  59:../../tmk_core/common/action_tapping.c ****     for (; waiting_buffer_tail != waiting_buffer_head; waiting_buffer_tail = (waiting_buffer_tail +
  60:../../tmk_core/common/action_tapping.c ****         if (process_tapping(&waiting_buffer[waiting_buffer_tail])) {
  61:../../tmk_core/common/action_tapping.c ****             debug("processed: waiting_buffer["); debug_dec(waiting_buffer_tail); debug("] = ");
  62:../../tmk_core/common/action_tapping.c ****             debug_record(waiting_buffer[waiting_buffer_tail]); debug("\n\n");
  63:../../tmk_core/common/action_tapping.c ****         } else {
  64:../../tmk_core/common/action_tapping.c ****             break;
  65:../../tmk_core/common/action_tapping.c ****         }
  66:../../tmk_core/common/action_tapping.c ****     }
  67:../../tmk_core/common/action_tapping.c ****     if (!IS_NOEVENT(record.event)) {
  68:../../tmk_core/common/action_tapping.c ****         debug("\n");
  69:../../tmk_core/common/action_tapping.c ****     }
  70:../../tmk_core/common/action_tapping.c **** }
  71:../../tmk_core/common/action_tapping.c **** 
  72:../../tmk_core/common/action_tapping.c **** 
  73:../../tmk_core/common/action_tapping.c **** /* Tapping
  74:../../tmk_core/common/action_tapping.c ****  *
  75:../../tmk_core/common/action_tapping.c ****  * Rule: Tap key is typed(pressed and released) within TAPPING_TERM.
  76:../../tmk_core/common/action_tapping.c ****  *       (without interfering by typing other key)
  77:../../tmk_core/common/action_tapping.c ****  */
  78:../../tmk_core/common/action_tapping.c **** /* return true when key event is processed or consumed. */
  79:../../tmk_core/common/action_tapping.c **** bool process_tapping(keyrecord_t *keyp)
  80:../../tmk_core/common/action_tapping.c **** {
  81:../../tmk_core/common/action_tapping.c ****     keyevent_t event = keyp->event;
  82:../../tmk_core/common/action_tapping.c **** 
  83:../../tmk_core/common/action_tapping.c ****     // if tapping
  84:../../tmk_core/common/action_tapping.c ****     if (IS_TAPPING_PRESSED()) {
  85:../../tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
  86:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
  87:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
  88:../../tmk_core/common/action_tapping.c ****                     // first tap!
  89:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: First tap(0->1).\n");
  90:../../tmk_core/common/action_tapping.c ****                     tapping_key.tap.count = 1;
  91:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
  92:../../tmk_core/common/action_tapping.c ****                     process_action(&tapping_key);
  93:../../tmk_core/common/action_tapping.c **** 
  94:../../tmk_core/common/action_tapping.c ****                     // copy tapping state
  95:../../tmk_core/common/action_tapping.c ****                     keyp->tap = tapping_key.tap;
  96:../../tmk_core/common/action_tapping.c ****                     // enqueue
  97:../../tmk_core/common/action_tapping.c ****                     return false;
  98:../../tmk_core/common/action_tapping.c ****                 }
  99:../../tmk_core/common/action_tapping.c **** #if TAPPING_TERM >= 500
 100:../../tmk_core/common/action_tapping.c ****                 /* Process a key typed within TAPPING_TERM
 101:../../tmk_core/common/action_tapping.c ****                  * This can register the key before settlement of tapping,
 102:../../tmk_core/common/action_tapping.c ****                  * useful for long TAPPING_TERM but may prevent fast typing.
 103:../../tmk_core/common/action_tapping.c ****                  */
 104:../../tmk_core/common/action_tapping.c ****                 else if (IS_RELEASED(event) && waiting_buffer_typed(event)) {
 105:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. No tap. Interfered by typing key\n");
 106:../../tmk_core/common/action_tapping.c ****                     process_action(&tapping_key);
 107:../../tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 108:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 109:../../tmk_core/common/action_tapping.c ****                     // enqueue
 110:../../tmk_core/common/action_tapping.c ****                     return false;
 111:../../tmk_core/common/action_tapping.c ****                 }
 112:../../tmk_core/common/action_tapping.c **** #endif
 113:../../tmk_core/common/action_tapping.c ****                 /* Process release event of a key pressed before tapping starts
 114:../../tmk_core/common/action_tapping.c ****                  * Without this unexpected repeating will occur with having fast repeating setting
 115:../../tmk_core/common/action_tapping.c ****                  * https://github.com/tmk/tmk_keyboard/issues/60
 116:../../tmk_core/common/action_tapping.c ****                  */
 117:../../tmk_core/common/action_tapping.c ****                 else if (IS_RELEASED(event) && !waiting_buffer_typed(event)) {
 118:../../tmk_core/common/action_tapping.c ****                     // Modifier should be retained till end of this tapping.
 119:../../tmk_core/common/action_tapping.c ****                     action_t action = layer_switch_get_action(event.key);
 120:../../tmk_core/common/action_tapping.c ****                     switch (action.kind.id) {
 121:../../tmk_core/common/action_tapping.c ****                         case ACT_LMODS:
 122:../../tmk_core/common/action_tapping.c ****                         case ACT_RMODS:
 123:../../tmk_core/common/action_tapping.c ****                             if (action.key.mods && !action.key.code) return false;
 124:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 125:../../tmk_core/common/action_tapping.c ****                             break;
 126:../../tmk_core/common/action_tapping.c ****                         case ACT_LMODS_TAP:
 127:../../tmk_core/common/action_tapping.c ****                         case ACT_RMODS_TAP:
 128:../../tmk_core/common/action_tapping.c ****                             if (action.key.mods && keyp->tap.count == 0) return false;
 129:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 130:../../tmk_core/common/action_tapping.c ****                             break;
 131:../../tmk_core/common/action_tapping.c ****                     }
 132:../../tmk_core/common/action_tapping.c ****                     // Release of key should be process immediately.
 133:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: release event of a key pressed before tapping\n");
 134:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 135:../../tmk_core/common/action_tapping.c ****                     return true;
 136:../../tmk_core/common/action_tapping.c ****                 }
 137:../../tmk_core/common/action_tapping.c ****                 else {
 138:../../tmk_core/common/action_tapping.c ****                     // set interrupted flag when other key preesed during tapping
 139:../../tmk_core/common/action_tapping.c ****                     if (event.pressed) {
 140:../../tmk_core/common/action_tapping.c ****                         tapping_key.tap.interrupted = true;
 141:../../tmk_core/common/action_tapping.c ****                     }
 142:../../tmk_core/common/action_tapping.c ****                     // enqueue 
 143:../../tmk_core/common/action_tapping.c ****                     return false;
 144:../../tmk_core/common/action_tapping.c ****                 }
 145:../../tmk_core/common/action_tapping.c ****             }
 146:../../tmk_core/common/action_tapping.c ****             // tap_count > 0
 147:../../tmk_core/common/action_tapping.c ****             else {
 148:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
 149:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 150:../../tmk_core/common/action_tapping.c ****                     keyp->tap = tapping_key.tap;
 151:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 152:../../tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 153:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 154:../../tmk_core/common/action_tapping.c ****                     return true;
 155:../../tmk_core/common/action_tapping.c ****                 }
 156:../../tmk_core/common/action_tapping.c ****                 else if (is_tap_key(event.key) && event.pressed) {
 157:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 158:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last tap(>1).\n");
 159:../../tmk_core/common/action_tapping.c ****                         // unregister key
 160:../../tmk_core/common/action_tapping.c ****                         process_action(&(keyrecord_t){
 161:../../tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 162:../../tmk_core/common/action_tapping.c ****                                 .event.key = tapping_key.event.key,
 163:../../tmk_core/common/action_tapping.c ****                                 .event.time = event.time,
 164:../../tmk_core/common/action_tapping.c ****                                 .event.pressed = false
 165:../../tmk_core/common/action_tapping.c ****                         });
 166:../../tmk_core/common/action_tapping.c ****                     } else {
 167:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start while last tap(1).\n");
 168:../../tmk_core/common/action_tapping.c ****                     }
 169:../../tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 170:../../tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 171:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 172:../../tmk_core/common/action_tapping.c ****                     return true;
 173:../../tmk_core/common/action_tapping.c ****                 }
 174:../../tmk_core/common/action_tapping.c ****                 else {
 175:../../tmk_core/common/action_tapping.c ****                     if (!IS_NOEVENT(event)) {
 176:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: key event while last tap(>0).\n");
 177:../../tmk_core/common/action_tapping.c ****                     }
 178:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 179:../../tmk_core/common/action_tapping.c ****                     return true;
 180:../../tmk_core/common/action_tapping.c ****                 }
 181:../../tmk_core/common/action_tapping.c ****             }
 182:../../tmk_core/common/action_tapping.c ****         }
 183:../../tmk_core/common/action_tapping.c ****         // after TAPPING_TERM
 184:../../tmk_core/common/action_tapping.c ****         else {
 185:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 186:../../tmk_core/common/action_tapping.c ****                 debug("Tapping: End. Timeout. Not tap(0): ");
 187:../../tmk_core/common/action_tapping.c ****                 debug_event(event); debug("\n");
 188:../../tmk_core/common/action_tapping.c ****                 process_action(&tapping_key);
 189:../../tmk_core/common/action_tapping.c ****                 tapping_key = (keyrecord_t){};
 190:../../tmk_core/common/action_tapping.c ****                 debug_tapping_key();
 191:../../tmk_core/common/action_tapping.c ****                 return false;
 192:../../tmk_core/common/action_tapping.c ****             }  else {
 193:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
 194:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 195:../../tmk_core/common/action_tapping.c ****                     keyp->tap = tapping_key.tap;
 196:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 197:../../tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 198:../../tmk_core/common/action_tapping.c ****                     return true;
 199:../../tmk_core/common/action_tapping.c ****                 }
 200:../../tmk_core/common/action_tapping.c ****                 else if (is_tap_key(event.key) && event.pressed) {
 201:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 202:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last timeout tap(>1).\n");
 203:../../tmk_core/common/action_tapping.c ****                         // unregister key
 204:../../tmk_core/common/action_tapping.c ****                         process_action(&(keyrecord_t){
 205:../../tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 206:../../tmk_core/common/action_tapping.c ****                                 .event.key = tapping_key.event.key,
 207:../../tmk_core/common/action_tapping.c ****                                 .event.time = event.time,
 208:../../tmk_core/common/action_tapping.c ****                                 .event.pressed = false
 209:../../tmk_core/common/action_tapping.c ****                         });
 210:../../tmk_core/common/action_tapping.c ****                     } else {
 211:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start while last timeout tap(1).\n");
 212:../../tmk_core/common/action_tapping.c ****                     }
 213:../../tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 214:../../tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 215:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 216:../../tmk_core/common/action_tapping.c ****                     return true;
 217:../../tmk_core/common/action_tapping.c ****                 }
 218:../../tmk_core/common/action_tapping.c ****                 else {
 219:../../tmk_core/common/action_tapping.c ****                     if (!IS_NOEVENT(event)) {
 220:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: key event while last timeout tap(>0).\n");
 221:../../tmk_core/common/action_tapping.c ****                     }
 222:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 223:../../tmk_core/common/action_tapping.c ****                     return true;
 224:../../tmk_core/common/action_tapping.c ****                 }
 225:../../tmk_core/common/action_tapping.c ****             }
 226:../../tmk_core/common/action_tapping.c ****         }
 227:../../tmk_core/common/action_tapping.c ****     } else if (IS_TAPPING_RELEASED()) {
 228:../../tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
 229:../../tmk_core/common/action_tapping.c ****             if (event.pressed) {
 230:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key)) {
 231:../../tmk_core/common/action_tapping.c ****                     if (!tapping_key.tap.interrupted && tapping_key.tap.count > 0) {
 232:../../tmk_core/common/action_tapping.c ****                         // sequential tap.
 233:../../tmk_core/common/action_tapping.c ****                         keyp->tap = tapping_key.tap;
 234:../../tmk_core/common/action_tapping.c ****                         if (keyp->tap.count < 15) keyp->tap.count += 1;
 235:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Tap press("); debug_dec(keyp->tap.count); debug(")\n");
 236:../../tmk_core/common/action_tapping.c ****                         process_action(keyp);
 237:../../tmk_core/common/action_tapping.c ****                         tapping_key = *keyp;
 238:../../tmk_core/common/action_tapping.c ****                         debug_tapping_key();
 239:../../tmk_core/common/action_tapping.c ****                         return true;
 240:../../tmk_core/common/action_tapping.c ****                     } else {
 241:../../tmk_core/common/action_tapping.c ****                         // FIX: start new tap again
 242:../../tmk_core/common/action_tapping.c ****                         tapping_key = *keyp;
 243:../../tmk_core/common/action_tapping.c ****                         return true;
 244:../../tmk_core/common/action_tapping.c ****                     }
 245:../../tmk_core/common/action_tapping.c ****                 } else if (is_tap_key(event.key)) {
 246:../../tmk_core/common/action_tapping.c ****                     // Sequential tap can be interfered with other tap key.
 247:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Start with interfering other tap.\n");
 248:../../tmk_core/common/action_tapping.c ****                     tapping_key = *keyp;
 249:../../tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 250:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 251:../../tmk_core/common/action_tapping.c ****                     return true;
 252:../../tmk_core/common/action_tapping.c ****                 } else {
 253:../../tmk_core/common/action_tapping.c ****                     // should none in buffer
 254:../../tmk_core/common/action_tapping.c ****                     // FIX: interrupted when other key is pressed
 255:../../tmk_core/common/action_tapping.c ****                     tapping_key.tap.interrupted = true;
 256:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 257:../../tmk_core/common/action_tapping.c ****                     return true;
 258:../../tmk_core/common/action_tapping.c ****                 }
 259:../../tmk_core/common/action_tapping.c ****             } else {
 260:../../tmk_core/common/action_tapping.c ****                 if (!IS_NOEVENT(event)) debug("Tapping: other key just after tap.\n");
 261:../../tmk_core/common/action_tapping.c ****                 process_action(keyp);
 262:../../tmk_core/common/action_tapping.c ****                 return true;
 263:../../tmk_core/common/action_tapping.c ****             }
 264:../../tmk_core/common/action_tapping.c ****         } else {
 265:../../tmk_core/common/action_tapping.c ****             // FIX: process_aciton here?
 266:../../tmk_core/common/action_tapping.c ****             // timeout. no sequential tap.
 267:../../tmk_core/common/action_tapping.c ****             debug("Tapping: End(Timeout after releasing last tap): ");
 268:../../tmk_core/common/action_tapping.c ****             debug_event(event); debug("\n");
 269:../../tmk_core/common/action_tapping.c ****             tapping_key = (keyrecord_t){};
 270:../../tmk_core/common/action_tapping.c ****             debug_tapping_key();
 271:../../tmk_core/common/action_tapping.c ****             return false;
 272:../../tmk_core/common/action_tapping.c ****         }
 273:../../tmk_core/common/action_tapping.c ****     }
 274:../../tmk_core/common/action_tapping.c ****     // not tapping state
 275:../../tmk_core/common/action_tapping.c ****     else {
 276:../../tmk_core/common/action_tapping.c ****         if (event.pressed && is_tap_key(event.key)) {
 277:../../tmk_core/common/action_tapping.c ****             debug("Tapping: Start(Press tap key).\n");
 278:../../tmk_core/common/action_tapping.c ****             tapping_key = *keyp;
 279:../../tmk_core/common/action_tapping.c ****             waiting_buffer_scan_tap();
 280:../../tmk_core/common/action_tapping.c ****             debug_tapping_key();
 281:../../tmk_core/common/action_tapping.c ****             return true;
 282:../../tmk_core/common/action_tapping.c ****         } else {
 283:../../tmk_core/common/action_tapping.c ****             process_action(keyp);
 284:../../tmk_core/common/action_tapping.c ****             return true;
 285:../../tmk_core/common/action_tapping.c ****         }
 286:../../tmk_core/common/action_tapping.c ****     }
 287:../../tmk_core/common/action_tapping.c **** }
 288:../../tmk_core/common/action_tapping.c **** 
 289:../../tmk_core/common/action_tapping.c **** 
 290:../../tmk_core/common/action_tapping.c **** /*
 291:../../tmk_core/common/action_tapping.c ****  * Waiting buffer
 292:../../tmk_core/common/action_tapping.c ****  */
 293:../../tmk_core/common/action_tapping.c **** bool waiting_buffer_enq(keyrecord_t record)
 294:../../tmk_core/common/action_tapping.c **** {
 295:../../tmk_core/common/action_tapping.c ****     if (IS_NOEVENT(record.event)) {
 296:../../tmk_core/common/action_tapping.c ****         return true;
 297:../../tmk_core/common/action_tapping.c ****     }
 298:../../tmk_core/common/action_tapping.c **** 
 299:../../tmk_core/common/action_tapping.c ****     if ((waiting_buffer_head + 1) % WAITING_BUFFER_SIZE == waiting_buffer_tail) {
 300:../../tmk_core/common/action_tapping.c ****         debug("waiting_buffer_enq: Over flow.\n");
 301:../../tmk_core/common/action_tapping.c ****         return false;
 302:../../tmk_core/common/action_tapping.c ****     }
 303:../../tmk_core/common/action_tapping.c **** 
 304:../../tmk_core/common/action_tapping.c ****     waiting_buffer[waiting_buffer_head] = record;
 305:../../tmk_core/common/action_tapping.c ****     waiting_buffer_head = (waiting_buffer_head + 1) % WAITING_BUFFER_SIZE;
 306:../../tmk_core/common/action_tapping.c **** 
 307:../../tmk_core/common/action_tapping.c ****     debug("waiting_buffer_enq: "); debug_waiting_buffer();
 308:../../tmk_core/common/action_tapping.c ****     return true;
 309:../../tmk_core/common/action_tapping.c **** }
 310:../../tmk_core/common/action_tapping.c **** 
 311:../../tmk_core/common/action_tapping.c **** void waiting_buffer_clear(void)
 312:../../tmk_core/common/action_tapping.c **** {
 313:../../tmk_core/common/action_tapping.c ****     waiting_buffer_head = 0;
 314:../../tmk_core/common/action_tapping.c ****     waiting_buffer_tail = 0;
 315:../../tmk_core/common/action_tapping.c **** }
 316:../../tmk_core/common/action_tapping.c **** 
 317:../../tmk_core/common/action_tapping.c **** bool waiting_buffer_typed(keyevent_t event)
 318:../../tmk_core/common/action_tapping.c **** {
 319:../../tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
 320:../../tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 321:../../tmk_core/common/action_tapping.c ****             return true;
 322:../../tmk_core/common/action_tapping.c ****         }
 323:../../tmk_core/common/action_tapping.c ****     }
 324:../../tmk_core/common/action_tapping.c ****     return false;
 325:../../tmk_core/common/action_tapping.c **** }
 326:../../tmk_core/common/action_tapping.c **** 
 327:../../tmk_core/common/action_tapping.c **** bool waiting_buffer_has_anykey_pressed(void)
 328:../../tmk_core/common/action_tapping.c **** {
 329:../../tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
 330:../../tmk_core/common/action_tapping.c ****         if (waiting_buffer[i].event.pressed) return true;
 331:../../tmk_core/common/action_tapping.c ****     }
 332:../../tmk_core/common/action_tapping.c ****     return false;
 333:../../tmk_core/common/action_tapping.c **** }
 334:../../tmk_core/common/action_tapping.c **** 
 335:../../tmk_core/common/action_tapping.c **** /* scan buffer for tapping */
 336:../../tmk_core/common/action_tapping.c **** void waiting_buffer_scan_tap(void)
 337:../../tmk_core/common/action_tapping.c **** {
 338:../../tmk_core/common/action_tapping.c ****     // tapping already is settled
 339:../../tmk_core/common/action_tapping.c ****     if (tapping_key.tap.count > 0) return;
 340:../../tmk_core/common/action_tapping.c ****     // invalid state: tapping_key released && tap.count == 0
 341:../../tmk_core/common/action_tapping.c ****     if (!tapping_key.event.pressed) return;
 342:../../tmk_core/common/action_tapping.c **** 
 343:../../tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
 344:../../tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 345:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 346:../../tmk_core/common/action_tapping.c ****                 WITHIN_TAPPING_TERM(waiting_buffer[i].event)) {
 347:../../tmk_core/common/action_tapping.c ****             tapping_key.tap.count = 1;
 348:../../tmk_core/common/action_tapping.c ****             waiting_buffer[i].tap.count = 1;
 349:../../tmk_core/common/action_tapping.c ****             process_action(&tapping_key);
 350:../../tmk_core/common/action_tapping.c **** 
 351:../../tmk_core/common/action_tapping.c ****             debug("waiting_buffer_scan_tap: found at ["); debug_dec(i); debug("]\n");
 352:../../tmk_core/common/action_tapping.c ****             debug_waiting_buffer();
 353:../../tmk_core/common/action_tapping.c ****             return;
 354:../../tmk_core/common/action_tapping.c ****         }
 355:../../tmk_core/common/action_tapping.c ****     }
 356:../../tmk_core/common/action_tapping.c **** }
 357:../../tmk_core/common/action_tapping.c **** 
 358:../../tmk_core/common/action_tapping.c **** 
 359:../../tmk_core/common/action_tapping.c **** /*
 360:../../tmk_core/common/action_tapping.c ****  * debug print
 361:../../tmk_core/common/action_tapping.c ****  */
 362:../../tmk_core/common/action_tapping.c **** static void debug_tapping_key(void)
 363:../../tmk_core/common/action_tapping.c **** {
 364:../../tmk_core/common/action_tapping.c ****     debug("TAPPING_KEY="); debug_record(tapping_key); debug("\n");
 365:../../tmk_core/common/action_tapping.c **** }
 366:../../tmk_core/common/action_tapping.c **** 
 367:../../tmk_core/common/action_tapping.c **** static void debug_waiting_buffer(void)
 368:../../tmk_core/common/action_tapping.c **** {
  15               		.loc 1 368 0
  16               		.cfi_startproc
  17 0000 1F93      		push r17
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 17, -2
  21 0002 CF93      		push r28
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 28, -3
  25 0004 DF93      		push r29
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 5
  28               		.cfi_offset 29, -4
  29               	/* prologue: function */
  30               	/* frame size = 0 */
  31               	/* stack size = 3 */
  32               	.L__stack_usage = 3
  33               	.LBB3:
 369:../../tmk_core/common/action_tapping.c ****     debug("{ ");
 370:../../tmk_core/common/action_tapping.c ****     for (uint8_t i = waiting_buffer_tail; i != waiting_buffer_head; i = (i + 1) % WAITING_BUFFER_SI
  34               		.loc 1 370 0
  35 0006 C091 0000 		lds r28,waiting_buffer_tail
  36               	.LVL0:
 371:../../tmk_core/common/action_tapping.c ****         debug("["); debug_dec(i); debug("]="); debug_record(waiting_buffer[i]); debug(" ");
  37               		.loc 1 371 0
  38 000a 16E0      		ldi r17,lo8(6)
  39               	.LVL1:
  40               	.L2:
 370:../../tmk_core/common/action_tapping.c ****         debug("["); debug_dec(i); debug("]="); debug_record(waiting_buffer[i]); debug(" ");
  41               		.loc 1 370 0 discriminator 1
  42 000c 8091 0000 		lds r24,waiting_buffer_head
  43 0010 C817      		cp r28,r24
  44 0012 01F0      		breq .L5
  45               		.loc 1 371 0 discriminator 3
  46 0014 D0E0      		ldi r29,0
  47 0016 1C9F      		mul r17,r28
  48 0018 F001      		movw r30,r0
  49 001a 1D9F      		mul r17,r29
  50 001c F00D      		add r31,r0
  51 001e 1124      		clr __zero_reg__
  52 0020 E050      		subi r30,lo8(-(waiting_buffer))
  53 0022 F040      		sbci r31,hi8(-(waiting_buffer))
  54 0024 4081      		ld r20,Z
  55 0026 5181      		ldd r21,Z+1
  56 0028 6281      		ldd r22,Z+2
  57 002a 7381      		ldd r23,Z+3
  58 002c 8481      		ldd r24,Z+4
  59 002e 9581      		ldd r25,Z+5
  60 0030 0E94 0000 		call debug_record
  61               	.LVL2:
 370:../../tmk_core/common/action_tapping.c ****         debug("["); debug_dec(i); debug("]="); debug_record(waiting_buffer[i]); debug(" ");
  62               		.loc 1 370 0 discriminator 3
  63 0034 2196      		adiw r28,1
  64               	.LVL3:
  65 0036 C770      		andi r28,lo8(7)
  66 0038 00C0      		rjmp .L2
  67               	.LVL4:
  68               	.L5:
  69               	/* epilogue start */
  70               	.LBE3:
 372:../../tmk_core/common/action_tapping.c ****     }
 373:../../tmk_core/common/action_tapping.c ****     debug("}\n");
 374:../../tmk_core/common/action_tapping.c **** }
  71               		.loc 1 374 0
  72 003a DF91      		pop r29
  73 003c CF91      		pop r28
  74               	.LVL5:
  75 003e 1F91      		pop r17
  76 0040 0895      		ret
  77               		.cfi_endproc
  78               	.LFE12:
  80               		.section	.text.debug_tapping_key,"ax",@progbits
  82               	debug_tapping_key:
  83               	.LFB11:
 363:../../tmk_core/common/action_tapping.c ****     debug("TAPPING_KEY="); debug_record(tapping_key); debug("\n");
  84               		.loc 1 363 0
  85               		.cfi_startproc
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 0 */
  89               	.L__stack_usage = 0
 364:../../tmk_core/common/action_tapping.c **** }
  90               		.loc 1 364 0
  91 0000 4091 0000 		lds r20,tapping_key
  92 0004 5091 0000 		lds r21,tapping_key+1
  93 0008 6091 0000 		lds r22,tapping_key+2
  94 000c 7091 0000 		lds r23,tapping_key+3
  95 0010 8091 0000 		lds r24,tapping_key+4
  96 0014 9091 0000 		lds r25,tapping_key+5
  97 0018 0C94 0000 		jmp debug_record
  98               	.LVL6:
  99               		.cfi_endproc
 100               	.LFE11:
 102               		.section	.text.waiting_buffer_scan_tap,"ax",@progbits
 104               	waiting_buffer_scan_tap:
 105               	.LFB10:
 337:../../tmk_core/common/action_tapping.c ****     // tapping already is settled
 106               		.loc 1 337 0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 339:../../tmk_core/common/action_tapping.c ****     // invalid state: tapping_key released && tap.count == 0
 112               		.loc 1 339 0
 113 0000 8091 0000 		lds r24,tapping_key+5
 114 0004 8295      		swap r24
 115 0006 8F70      		andi r24,lo8(15)
 116 0008 01F0      		breq .+2
 117 000a 00C0      		rjmp .L7
 341:../../tmk_core/common/action_tapping.c **** 
 118               		.loc 1 341 0
 119 000c 8091 0000 		lds r24,tapping_key+2
 120 0010 8823      		tst r24
 121 0012 01F4      		brne .+2
 122 0014 00C0      		rjmp .L7
 123               	.LBB7:
 343:../../tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 124               		.loc 1 343 0
 125 0016 8091 0000 		lds r24,waiting_buffer_tail
 126               	.LVL7:
 127 001a A091 0000 		lds r26,waiting_buffer_head
 128 001e 6091 0000 		lds r22,tapping_key
 129 0022 7091 0000 		lds r23,tapping_key+1
 130 0026 4091 0000 		lds r20,tapping_key+3
 131 002a 5091 0000 		lds r21,tapping_key+3+1
 344:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 132               		.loc 1 344 0
 133 002e B6E0      		ldi r27,lo8(6)
 134               	.LVL8:
 135               	.L9:
 343:../../tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 136               		.loc 1 343 0 discriminator 1
 137 0030 8A17      		cp r24,r26
 138 0032 01F4      		brne .+2
 139 0034 00C0      		rjmp .L7
 140 0036 90E0      		ldi r25,0
 141               	.LBB8:
 142               	.LBB9:
 143               		.file 2 "../../tmk_core/common/keyboard.h"
   1:../../tmk_core/common/keyboard.h **** /*
   2:../../tmk_core/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.h **** 
   4:../../tmk_core/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.h **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.h **** 
   9:../../tmk_core/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.h **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.h **** 
  14:../../tmk_core/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.h **** */
  17:../../tmk_core/common/keyboard.h **** 
  18:../../tmk_core/common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../tmk_core/common/keyboard.h **** #define KEYBOARD_H
  20:../../tmk_core/common/keyboard.h **** 
  21:../../tmk_core/common/keyboard.h **** #include <stdbool.h>
  22:../../tmk_core/common/keyboard.h **** #include <stdint.h>
  23:../../tmk_core/common/keyboard.h **** 
  24:../../tmk_core/common/keyboard.h **** 
  25:../../tmk_core/common/keyboard.h **** #ifdef __cplusplus
  26:../../tmk_core/common/keyboard.h **** extern "C" {
  27:../../tmk_core/common/keyboard.h **** #endif
  28:../../tmk_core/common/keyboard.h **** 
  29:../../tmk_core/common/keyboard.h **** /* key matrix position */
  30:../../tmk_core/common/keyboard.h **** typedef struct {
  31:../../tmk_core/common/keyboard.h ****     uint8_t col;
  32:../../tmk_core/common/keyboard.h ****     uint8_t row;
  33:../../tmk_core/common/keyboard.h **** } keypos_t;
  34:../../tmk_core/common/keyboard.h **** 
  35:../../tmk_core/common/keyboard.h **** /* key event */
  36:../../tmk_core/common/keyboard.h **** typedef struct {
  37:../../tmk_core/common/keyboard.h ****     keypos_t key;
  38:../../tmk_core/common/keyboard.h ****     bool     pressed;
  39:../../tmk_core/common/keyboard.h ****     uint16_t time;
  40:../../tmk_core/common/keyboard.h **** } keyevent_t;
  41:../../tmk_core/common/keyboard.h **** 
  42:../../tmk_core/common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../tmk_core/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../tmk_core/common/keyboard.h **** 
  45:../../tmk_core/common/keyboard.h **** /* Rules for No Event:
  46:../../tmk_core/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../tmk_core/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../tmk_core/common/keyboard.h ****  */
  49:../../tmk_core/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
 144               		.loc 2 49 0
 145 0038 4115      		cp r20,__zero_reg__
 146 003a 5105      		cpc r21,__zero_reg__
 147 003c 01F0      		breq .L10
 148 003e 7F3F      		cpi r23,lo8(-1)
 149 0040 01F4      		brne .L11
 150               	.LBE9:
 151               	.LBE8:
 344:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 152               		.loc 1 344 0
 153 0042 6F3F      		cpi r22,lo8(-1)
 154 0044 01F0      		breq .L10
 155               	.L11:
 344:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 156               		.loc 1 344 0 is_stmt 0 discriminator 1
 157 0046 B89F      		mul r27,r24
 158 0048 F001      		movw r30,r0
 159 004a B99F      		mul r27,r25
 160 004c F00D      		add r31,r0
 161 004e 1124      		clr __zero_reg__
 162 0050 E050      		subi r30,lo8(-(waiting_buffer))
 163 0052 F040      		sbci r31,hi8(-(waiting_buffer))
 164 0054 2181      		ldd r18,Z+1
 165 0056 7213      		cpse r23,r18
 166 0058 00C0      		rjmp .L10
 344:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 167               		.loc 1 344 0 discriminator 2
 168 005a 2081      		ld r18,Z
 169 005c 6213      		cpse r22,r18
 170 005e 00C0      		rjmp .L10
 344:../../tmk_core/common/action_tapping.c ****                 !waiting_buffer[i].event.pressed &&
 171               		.loc 1 344 0 discriminator 3
 172 0060 2281      		ldd r18,Z+2
 173 0062 2111      		cpse r18,__zero_reg__
 174 0064 00C0      		rjmp .L10
 346:../../tmk_core/common/action_tapping.c ****             tapping_key.tap.count = 1;
 175               		.loc 1 346 0 is_stmt 1
 176 0066 2381      		ldd r18,Z+3
 177 0068 3481      		ldd r19,Z+4
 178 006a 2417      		cp r18,r20
 179 006c 3507      		cpc r19,r21
 180 006e 00F4      		brsh .L28
 181 0070 2150      		subi r18,1
 182 0072 3109      		sbc r19,__zero_reg__
 183               	.L28:
 346:../../tmk_core/common/action_tapping.c ****             tapping_key.tap.count = 1;
 184               		.loc 1 346 0 is_stmt 0 discriminator 2
 185 0074 241B      		sub r18,r20
 186 0076 350B      		sbc r19,r21
 187 0078 2C32      		cpi r18,44
 188 007a 3140      		sbci r19,1
 189 007c 00F4      		brsh .L10
 347:../../tmk_core/common/action_tapping.c ****             waiting_buffer[i].tap.count = 1;
 190               		.loc 1 347 0 is_stmt 1
 191 007e 2091 0000 		lds r18,tapping_key+5
 192 0082 2F70      		andi r18,lo8(15)
 193 0084 2061      		ori r18,lo8(16)
 194 0086 2093 0000 		sts tapping_key+5,r18
 348:../../tmk_core/common/action_tapping.c ****             process_action(&tapping_key);
 195               		.loc 1 348 0
 196 008a 26E0      		ldi r18,lo8(6)
 197 008c 289F      		mul r18,r24
 198 008e F001      		movw r30,r0
 199 0090 299F      		mul r18,r25
 200 0092 F00D      		add r31,r0
 201 0094 1124      		clr __zero_reg__
 202 0096 E050      		subi r30,lo8(-(waiting_buffer+5))
 203 0098 F040      		sbci r31,hi8(-(waiting_buffer+5))
 204 009a 8081      		ld r24,Z
 205               	.LVL9:
 206 009c 8F70      		andi r24,lo8(15)
 207 009e 8061      		ori r24,lo8(16)
 208 00a0 8083      		st Z,r24
 349:../../tmk_core/common/action_tapping.c **** 
 209               		.loc 1 349 0
 210 00a2 80E0      		ldi r24,lo8(tapping_key)
 211 00a4 90E0      		ldi r25,hi8(tapping_key)
 212 00a6 0E94 0000 		call process_action
 213               	.LVL10:
 352:../../tmk_core/common/action_tapping.c ****             return;
 214               		.loc 1 352 0
 215 00aa 0C94 0000 		jmp debug_waiting_buffer
 216               	.LVL11:
 217               	.L10:
 343:../../tmk_core/common/action_tapping.c ****         if (IS_TAPPING_KEY(waiting_buffer[i].event.key) &&
 218               		.loc 1 343 0 discriminator 2
 219 00ae 0196      		adiw r24,1
 220               	.LVL12:
 221 00b0 8770      		andi r24,lo8(7)
 222 00b2 00C0      		rjmp .L9
 223               	.L7:
 224 00b4 0895      		ret
 225               	.LBE7:
 226               		.cfi_endproc
 227               	.LFE10:
 229               		.section	.text.process_tapping,"ax",@progbits
 231               	process_tapping:
 232               	.LFB5:
  80:../../tmk_core/common/action_tapping.c ****     keyevent_t event = keyp->event;
 233               		.loc 1 80 0
 234               		.cfi_startproc
 235               	.LVL13:
 236 0000 CF92      		push r12
 237               	.LCFI3:
 238               		.cfi_def_cfa_offset 3
 239               		.cfi_offset 12, -2
 240 0002 DF92      		push r13
 241               	.LCFI4:
 242               		.cfi_def_cfa_offset 4
 243               		.cfi_offset 13, -3
 244 0004 EF92      		push r14
 245               	.LCFI5:
 246               		.cfi_def_cfa_offset 5
 247               		.cfi_offset 14, -4
 248 0006 FF92      		push r15
 249               	.LCFI6:
 250               		.cfi_def_cfa_offset 6
 251               		.cfi_offset 15, -5
 252 0008 0F93      		push r16
 253               	.LCFI7:
 254               		.cfi_def_cfa_offset 7
 255               		.cfi_offset 16, -6
 256 000a 1F93      		push r17
 257               	.LCFI8:
 258               		.cfi_def_cfa_offset 8
 259               		.cfi_offset 17, -7
 260 000c CF93      		push r28
 261               	.LCFI9:
 262               		.cfi_def_cfa_offset 9
 263               		.cfi_offset 28, -8
 264 000e DF93      		push r29
 265               	.LCFI10:
 266               		.cfi_def_cfa_offset 10
 267               		.cfi_offset 29, -9
 268 0010 CDB7      		in r28,__SP_L__
 269 0012 DEB7      		in r29,__SP_H__
 270               	.LCFI11:
 271               		.cfi_def_cfa_register 28
 272 0014 6297      		sbiw r28,18
 273               	.LCFI12:
 274               		.cfi_def_cfa_offset 28
 275 0016 0FB6      		in __tmp_reg__,__SREG__
 276 0018 F894      		cli
 277 001a DEBF      		out __SP_H__,r29
 278 001c 0FBE      		out __SREG__,__tmp_reg__
 279 001e CDBF      		out __SP_L__,r28
 280               	/* prologue: function */
 281               	/* frame size = 18 */
 282               	/* stack size = 26 */
 283               	.L__stack_usage = 26
 284 0020 8C01      		movw r16,r24
  81:../../tmk_core/common/action_tapping.c **** 
 285               		.loc 1 81 0
 286 0022 85E0      		ldi r24,lo8(5)
 287               	.LVL14:
 288 0024 F801      		movw r30,r16
 289 0026 DE01      		movw r26,r28
 290 0028 1D96      		adiw r26,13
 291               		0:
 292 002a 0190      		ld r0,Z+
 293 002c 0D92      		st X+,r0
 294 002e 8A95      		dec r24
 295 0030 01F4      		brne 0b
 296 0032 D801      		movw r26,r16
 297 0034 4C91      		ld r20,X
 298               	.LVL15:
 299 0036 1196      		adiw r26,1
 300 0038 5C91      		ld r21,X
 301 003a 1197      		sbiw r26,1
 302               	.LVL16:
 303 003c 1296      		adiw r26,2
 304 003e 6C91      		ld r22,X
 305 0040 1297      		sbiw r26,2
 306               	.LVL17:
 307 0042 1396      		adiw r26,3
 308 0044 CD90      		ld r12,X+
 309 0046 DC90      		ld r13,X
 310 0048 1497      		sbiw r26,3+1
 311               	.LVL18:
 312 004a 3091 0000 		lds r19,tapping_key
 313 004e 7091 0000 		lds r23,tapping_key+1
 314 0052 8091 0000 		lds r24,tapping_key+3
 315 0056 9091 0000 		lds r25,tapping_key+3+1
 316               	.LBB20:
 317               	.LBB21:
 318               		.loc 2 49 0
 319 005a 0097      		sbiw r24,0
 320 005c 01F4      		brne .+2
 321 005e 00C0      		rjmp .L30
 322 0060 7F3F      		cpi r23,lo8(-1)
 323 0062 01F4      		brne .L31
 324               	.LBE21:
 325               	.LBE20:
  84:../../tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
 326               		.loc 1 84 0
 327 0064 3F3F      		cpi r19,lo8(-1)
 328 0066 01F4      		brne .+2
 329 0068 00C0      		rjmp .L30
 330               	.L31:
  84:../../tmk_core/common/action_tapping.c ****         if (WITHIN_TAPPING_TERM(event)) {
 331               		.loc 1 84 0 is_stmt 0 discriminator 1
 332 006a E090 0000 		lds r14,tapping_key+2
 333 006e EE20      		tst r14
 334 0070 01F4      		brne .+2
 335 0072 00C0      		rjmp .L32
 336 0074 2091 0000 		lds r18,tapping_key+5
  85:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 337               		.loc 1 85 0 is_stmt 1
 338 0078 C816      		cp r12,r24
 339 007a D906      		cpc r13,r25
 340 007c 00F0      		brlo .L33
  85:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 341               		.loc 1 85 0 is_stmt 0 discriminator 1
 342 007e F601      		movw r30,r12
 343 0080 E81B      		sub r30,r24
 344 0082 F90B      		sbc r31,r25
 345 0084 CF01      		movw r24,r30
 346 0086 FF24      		clr r15
 347 0088 F394      		inc r15
 348 008a 8C32      		cpi r24,44
 349 008c 9140      		sbci r25,1
 350 008e 00F0      		brlo .L86
 351 0090 00C0      		rjmp .L126
 352               	.L33:
 353 0092 8095      		com r24
 354 0094 9095      		com r25
  85:../../tmk_core/common/action_tapping.c ****             if (tapping_key.tap.count == 0) {
 355               		.loc 1 85 0 discriminator 2
 356 0096 8C0D      		add r24,r12
 357 0098 9D1D      		adc r25,r13
 358 009a FF24      		clr r15
 359 009c F394      		inc r15
 360 009e 8C32      		cpi r24,44
 361 00a0 9140      		sbci r25,1
 362 00a2 00F0      		brlo .L86
 363               	.L126:
 364 00a4 F12C      		mov r15,__zero_reg__
 185:../../tmk_core/common/action_tapping.c ****                 debug("Tapping: End. Timeout. Not tap(0): ");
 365               		.loc 1 185 0 is_stmt 1 discriminator 2
 366 00a6 207F      		andi r18,lo8(-16)
 367 00a8 01F0      		breq .+2
 368 00aa 00C0      		rjmp .L57
 187:../../tmk_core/common/action_tapping.c ****                 process_action(&tapping_key);
 369               		.loc 1 187 0
 370 00ac 7C2D      		mov r23,r12
 371 00ae D98A      		std Y+17,r13
 372 00b0 C88A      		std Y+16,r12
 373 00b2 8989      		ldd r24,Y+17
 374 00b4 0E94 0000 		call debug_event
 375               	.LVL19:
 188:../../tmk_core/common/action_tapping.c ****                 tapping_key = (keyrecord_t){};
 376               		.loc 1 188 0
 377 00b8 80E0      		ldi r24,lo8(tapping_key)
 378 00ba 90E0      		ldi r25,hi8(tapping_key)
 379 00bc 0E94 0000 		call process_action
 380               	.LVL20:
 381 00c0 00C0      		rjmp .L131
 382               	.LVL21:
 383               	.L86:
  86:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key) && !event.pressed) {
 384               		.loc 1 86 0
 385 00c2 822F      		mov r24,r18
 386 00c4 807F      		andi r24,lo8(-16)
 387 00c6 01F0      		breq .+2
 388 00c8 00C0      		rjmp .L38
  87:../../tmk_core/common/action_tapping.c ****                     // first tap!
 389               		.loc 1 87 0 discriminator 1
 390 00ca 7513      		cpse r23,r21
 391 00cc 00C0      		rjmp .L39
  87:../../tmk_core/common/action_tapping.c ****                     // first tap!
 392               		.loc 1 87 0 is_stmt 0 discriminator 2
 393 00ce 3413      		cpse r19,r20
 394 00d0 00C0      		rjmp .L39
  87:../../tmk_core/common/action_tapping.c ****                     // first tap!
 395               		.loc 1 87 0 discriminator 3
 396 00d2 6111      		cpse r22,__zero_reg__
 397 00d4 00C0      		rjmp .L39
  90:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 398               		.loc 1 90 0 is_stmt 1
 399 00d6 2F70      		andi r18,lo8(15)
 400 00d8 2061      		ori r18,lo8(16)
 401 00da 2093 0000 		sts tapping_key+5,r18
  91:../../tmk_core/common/action_tapping.c ****                     process_action(&tapping_key);
 402               		.loc 1 91 0
 403 00de 0E94 0000 		call debug_tapping_key
 404               	.LVL22:
  92:../../tmk_core/common/action_tapping.c **** 
 405               		.loc 1 92 0
 406 00e2 80E0      		ldi r24,lo8(tapping_key)
 407 00e4 90E0      		ldi r25,hi8(tapping_key)
 408 00e6 0E94 0000 		call process_action
 409               	.LVL23:
  95:../../tmk_core/common/action_tapping.c ****                     // enqueue
 410               		.loc 1 95 0
 411 00ea 8091 0000 		lds r24,tapping_key+5
 412 00ee F801      		movw r30,r16
 413 00f0 8583      		std Z+5,r24
 414 00f2 00C0      		rjmp .L128
 415               	.LVL24:
 416               	.L39:
 417               	.LBB22:
 418               	.LBB23:
 419               	.LBB24:
 420               	.LBB25:
 421               		.loc 2 49 0
 422 00f4 CD28      		or r12,r13
 423 00f6 01F0      		breq .L41
 424 00f8 5F3F      		cpi r21,lo8(-1)
 425 00fa 01F4      		brne .L42
 426               	.LBE25:
 427               	.LBE24:
  50:../../tmk_core/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
  51:../../tmk_core/common/keyboard.h **** static inline bool IS_RELEASED(keyevent_t event) { return (!IS_NOEVENT(event) && !event.pressed); }
 428               		.loc 2 51 0
 429 00fc 4F3F      		cpi r20,lo8(-1)
 430 00fe 01F0      		breq .L41
 431               	.L42:
 432 0100 F62E      		mov r15,r22
 433 0102 6111      		cpse r22,__zero_reg__
 434 0104 00C0      		rjmp .L41
 435               	.LVL25:
 436               	.LBE23:
 437               	.LBE22:
 438               	.LBB26:
 439               	.LBB27:
 319:../../tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 440               		.loc 1 319 0 discriminator 1
 441 0106 8091 0000 		lds r24,waiting_buffer_tail
 442               	.LVL26:
 443 010a 2091 0000 		lds r18,waiting_buffer_head
 320:../../tmk_core/common/action_tapping.c ****             return true;
 444               		.loc 1 320 0 discriminator 1
 445 010e 36E0      		ldi r19,lo8(6)
 446               	.LVL27:
 447               	.L43:
 319:../../tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 448               		.loc 1 319 0
 449 0110 8217      		cp r24,r18
 450 0112 01F4      		brne .+2
 451 0114 00C0      		rjmp .L132
 320:../../tmk_core/common/action_tapping.c ****             return true;
 452               		.loc 1 320 0
 453 0116 90E0      		ldi r25,0
 454 0118 389F      		mul r19,r24
 455 011a F001      		movw r30,r0
 456 011c 399F      		mul r19,r25
 457 011e F00D      		add r31,r0
 458 0120 1124      		clr __zero_reg__
 459 0122 E050      		subi r30,lo8(-(waiting_buffer))
 460 0124 F040      		sbci r31,hi8(-(waiting_buffer))
 461 0126 7181      		ldd r23,Z+1
 462 0128 5713      		cpse r21,r23
 463 012a 00C0      		rjmp .L44
 464 012c 7081      		ld r23,Z
 465 012e 4713      		cpse r20,r23
 466 0130 00C0      		rjmp .L44
 467 0132 7281      		ldd r23,Z+2
 468 0134 7111      		cpse r23,__zero_reg__
 469 0136 00C0      		rjmp .L41
 470               	.L44:
 319:../../tmk_core/common/action_tapping.c ****         if (KEYEQ(event.key, waiting_buffer[i].event.key) && event.pressed !=  waiting_buffer[i].ev
 471               		.loc 1 319 0
 472 0138 0196      		adiw r24,1
 473               	.LVL28:
 474 013a 8770      		andi r24,lo8(7)
 475 013c 00C0      		rjmp .L43
 476               	.LVL29:
 477               	.L41:
 478               	.LBE27:
 479               	.LBE26:
 139:../../tmk_core/common/action_tapping.c ****                         tapping_key.tap.interrupted = true;
 480               		.loc 1 139 0
 481 013e F62E      		mov r15,r22
 482 0140 6623      		tst r22
 483 0142 01F4      		brne .+2
 484 0144 00C0      		rjmp .L88
 485               	.LVL30:
 140:../../tmk_core/common/action_tapping.c ****                     }
 486               		.loc 1 140 0
 487 0146 8091 0000 		lds r24,tapping_key+5
 488 014a 8160      		ori r24,lo8(1<<0)
 489 014c 8093 0000 		sts tapping_key+5,r24
 490               	.LVL31:
 491               	.L128:
 143:../../tmk_core/common/action_tapping.c ****                 }
 492               		.loc 1 143 0
 493 0150 F12C      		mov r15,__zero_reg__
 494 0152 00C0      		rjmp .L88
 495               	.LVL32:
 496               	.L38:
 148:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 497               		.loc 1 148 0 discriminator 1
 498 0154 7513      		cpse r23,r21
 499 0156 00C0      		rjmp .L53
 148:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 500               		.loc 1 148 0 is_stmt 0 discriminator 2
 501 0158 3413      		cpse r19,r20
 502 015a 00C0      		rjmp .L53
 148:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: Tap release("); debug_dec(tapping_key.tap.count); debug(")\n");
 503               		.loc 1 148 0 discriminator 3
 504 015c 6111      		cpse r22,__zero_reg__
 505 015e 00C0      		rjmp .L53
 150:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 506               		.loc 1 150 0 is_stmt 1
 507 0160 8091 0000 		lds r24,tapping_key+5
 508 0164 F801      		movw r30,r16
 509 0166 8583      		std Z+5,r24
 510 0168 00C0      		rjmp .L68
 511               	.L53:
 156:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 512               		.loc 1 156 0
 513 016a 4D87      		std Y+13,r20
 514 016c 5E87      		std Y+14,r21
 515 016e 8D85      		ldd r24,Y+13
 516 0170 9E85      		ldd r25,Y+14
 517 0172 6A8B      		std Y+18,r22
 518 0174 0E94 0000 		call is_tap_key
 519               	.LVL33:
 520 0178 6A89      		ldd r22,Y+18
 521 017a 8823      		tst r24
 522 017c 01F0      		breq .L65
 156:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 523               		.loc 1 156 0 is_stmt 0 discriminator 1
 524 017e 6623      		tst r22
 525 0180 01F0      		breq .L65
 157:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last tap(>1).\n");
 526               		.loc 1 157 0 is_stmt 1
 527 0182 2091 0000 		lds r18,tapping_key+5
 528 0186 822F      		mov r24,r18
 529 0188 8295      		swap r24
 530 018a 8F70      		andi r24,lo8(15)
 531 018c 90E0      		ldi r25,0
 532 018e 0297      		sbiw r24,2
 533 0190 04F0      		brlt .L56
 160:../../tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 534               		.loc 1 160 0
 535 0192 8091 0000 		lds r24,tapping_key
 536 0196 9091 0000 		lds r25,tapping_key+1
 537 019a 9887      		std Y+8,r25
 538 019c 8F83      		std Y+7,r24
 539 019e 1986      		std Y+9,__zero_reg__
 540 01a0 DB86      		std Y+11,r13
 541 01a2 CA86      		std Y+10,r12
 542 01a4 2C87      		std Y+12,r18
 543 01a6 CE01      		movw r24,r28
 544 01a8 0796      		adiw r24,7
 545               	.L125:
 546 01aa 0E94 0000 		call process_action
 547               	.LVL34:
 548               	.L56:
 169:../../tmk_core/common/action_tapping.c ****                     waiting_buffer_scan_tap();
 549               		.loc 1 169 0
 550 01ae 86E0      		ldi r24,lo8(6)
 551 01b0 F801      		movw r30,r16
 552 01b2 A0E0      		ldi r26,lo8(tapping_key)
 553 01b4 B0E0      		ldi r27,hi8(tapping_key)
 554               		0:
 555 01b6 0190      		ld r0,Z+
 556 01b8 0D92      		st X+,r0
 557 01ba 8A95      		dec r24
 558 01bc 01F4      		brne 0b
 170:../../tmk_core/common/action_tapping.c ****                     debug_tapping_key();
 559               		.loc 1 170 0
 560 01be 0E94 0000 		call waiting_buffer_scan_tap
 561               	.LVL35:
 171:../../tmk_core/common/action_tapping.c ****                     return true;
 562               		.loc 1 171 0
 563 01c2 0E94 0000 		call debug_tapping_key
 564               	.LVL36:
 565               	.L129:
 172:../../tmk_core/common/action_tapping.c ****                 }
 566               		.loc 1 172 0
 567 01c6 FF24      		clr r15
 568 01c8 F394      		inc r15
 569 01ca 00C0      		rjmp .L88
 570               	.LVL37:
 571               	.L132:
 572               	.LBB28:
 119:../../tmk_core/common/action_tapping.c ****                     switch (action.kind.id) {
 573               		.loc 1 119 0
 574 01cc 4D87      		std Y+13,r20
 575 01ce 5E87      		std Y+14,r21
 576 01d0 8D85      		ldd r24,Y+13
 577 01d2 9E85      		ldd r25,Y+14
 578               	.LVL38:
 579 01d4 0E94 0000 		call layer_switch_get_action
 580               	.LVL39:
 120:../../tmk_core/common/action_tapping.c ****                         case ACT_LMODS:
 581               		.loc 1 120 0
 582 01d8 292F      		mov r18,r25
 583 01da 2295      		swap r18
 584 01dc 2F70      		andi r18,lo8(15)
 585 01de 30E0      		ldi r19,0
 586 01e0 2230      		cpi r18,2
 587 01e2 3105      		cpc r19,__zero_reg__
 588 01e4 04F0      		brlt .+2
 589 01e6 00C0      		rjmp .L133
 123:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 590               		.loc 1 123 0
 591 01e8 9F70      		andi r25,lo8(15)
 592               	.LVL40:
 593 01ea 01F0      		breq .+2
 594 01ec 00C0      		rjmp .L134
 595               	.L52:
 129:../../tmk_core/common/action_tapping.c ****                             break;
 596               		.loc 1 129 0
 597 01ee 805E      		subi r24,lo8(-(32))
 598               	.LVL41:
 599 01f0 8830      		cpi r24,lo8(8)
 600 01f2 00F4      		brsh .+2
 601 01f4 00C0      		rjmp .L88
 602               	.LVL42:
 603               	.L65:
 604               	.LBE28:
 178:../../tmk_core/common/action_tapping.c ****                     return true;
 605               		.loc 1 178 0
 606 01f6 C801      		movw r24,r16
 607               	.LVL43:
 608 01f8 0E94 0000 		call process_action
 609               	.LVL44:
 610 01fc 00C0      		rjmp .L129
 611               	.LVL45:
 612               	.L32:
 228:../../tmk_core/common/action_tapping.c ****             if (event.pressed) {
 613               		.loc 1 228 0
 614 01fe C816      		cp r12,r24
 615 0200 D906      		cpc r13,r25
 616 0202 00F4      		brsh .+2
 617 0204 00C0      		rjmp .L60
 228:../../tmk_core/common/action_tapping.c ****             if (event.pressed) {
 618               		.loc 1 228 0 is_stmt 0 discriminator 1
 619 0206 F601      		movw r30,r12
 620 0208 E81B      		sub r30,r24
 621 020a F90B      		sbc r31,r25
 622 020c CF01      		movw r24,r30
 623 020e 8C32      		cpi r24,44
 624 0210 9140      		sbci r25,1
 625 0212 00F4      		brsh .+2
 626 0214 00C0      		rjmp .L87
 627               	.L127:
 228:../../tmk_core/common/action_tapping.c ****             if (event.pressed) {
 628               		.loc 1 228 0 discriminator 2
 629 0216 F12C      		mov r15,__zero_reg__
 268:../../tmk_core/common/action_tapping.c ****             tapping_key = (keyrecord_t){};
 630               		.loc 1 268 0 is_stmt 1 discriminator 2
 631 0218 7C2D      		mov r23,r12
 632 021a D98A      		std Y+17,r13
 633 021c C88A      		std Y+16,r12
 634 021e 8989      		ldd r24,Y+17
 635 0220 0E94 0000 		call debug_event
 636               	.LVL46:
 637               	.L131:
 189:../../tmk_core/common/action_tapping.c ****                 debug_tapping_key();
 638               		.loc 1 189 0
 639 0224 E0E0      		ldi r30,lo8(tapping_key)
 640 0226 F0E0      		ldi r31,hi8(tapping_key)
 641 0228 86E0      		ldi r24,lo8(6)
 642 022a DF01      		movw r26,r30
 643               		0:
 644 022c 1D92      		st X+,__zero_reg__
 645 022e 8A95      		dec r24
 646 0230 01F4      		brne 0b
 647               	.L130:
 190:../../tmk_core/common/action_tapping.c ****                 return false;
 648               		.loc 1 190 0
 649 0232 0E94 0000 		call debug_tapping_key
 650               	.LVL47:
 191:../../tmk_core/common/action_tapping.c ****             }  else {
 651               		.loc 1 191 0
 652 0236 00C0      		rjmp .L88
 653               	.LVL48:
 654               	.L57:
 193:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 655               		.loc 1 193 0 discriminator 1
 656 0238 7513      		cpse r23,r21
 657 023a 00C0      		rjmp .L58
 193:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 658               		.loc 1 193 0 is_stmt 0 discriminator 2
 659 023c 3413      		cpse r19,r20
 660 023e 00C0      		rjmp .L58
 193:../../tmk_core/common/action_tapping.c ****                     debug("Tapping: End. last timeout tap release(>0).");
 661               		.loc 1 193 0 discriminator 3
 662 0240 6111      		cpse r22,__zero_reg__
 663 0242 00C0      		rjmp .L58
 195:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 664               		.loc 1 195 0 is_stmt 1
 665 0244 8091 0000 		lds r24,tapping_key+5
 666 0248 F801      		movw r30,r16
 667 024a 8583      		std Z+5,r24
 196:../../tmk_core/common/action_tapping.c ****                     tapping_key = (keyrecord_t){};
 668               		.loc 1 196 0
 669 024c C801      		movw r24,r16
 670 024e 0E94 0000 		call process_action
 671               	.LVL49:
 197:../../tmk_core/common/action_tapping.c ****                     return true;
 672               		.loc 1 197 0
 673 0252 86E0      		ldi r24,lo8(6)
 674 0254 E0E0      		ldi r30,lo8(tapping_key)
 675 0256 F0E0      		ldi r31,hi8(tapping_key)
 676 0258 DF01      		movw r26,r30
 677               		0:
 678 025a 1D92      		st X+,__zero_reg__
 679 025c 8A95      		dec r24
 680 025e 01F4      		brne 0b
 198:../../tmk_core/common/action_tapping.c ****                 }
 681               		.loc 1 198 0
 682 0260 FE2C      		mov r15,r14
 683 0262 00C0      		rjmp .L88
 684               	.LVL50:
 685               	.L58:
 200:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 686               		.loc 1 200 0
 687 0264 4D87      		std Y+13,r20
 688 0266 5E87      		std Y+14,r21
 689 0268 8D85      		ldd r24,Y+13
 690 026a 9E85      		ldd r25,Y+14
 691 026c 6A8B      		std Y+18,r22
 692 026e 0E94 0000 		call is_tap_key
 693               	.LVL51:
 694 0272 6A89      		ldd r22,Y+18
 695 0274 8823      		tst r24
 696 0276 01F4      		brne .+2
 697 0278 00C0      		rjmp .L65
 200:../../tmk_core/common/action_tapping.c ****                     if (tapping_key.tap.count > 1) {
 698               		.loc 1 200 0 is_stmt 0 discriminator 1
 699 027a 6623      		tst r22
 700 027c 01F4      		brne .+2
 701 027e 00C0      		rjmp .L65
 201:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Start new tap with releasing last timeout tap(>1).\n");
 702               		.loc 1 201 0 is_stmt 1
 703 0280 2091 0000 		lds r18,tapping_key+5
 704 0284 822F      		mov r24,r18
 705 0286 8295      		swap r24
 706 0288 8F70      		andi r24,lo8(15)
 707 028a 90E0      		ldi r25,0
 708 028c 0297      		sbiw r24,2
 709 028e 04F4      		brge .+2
 710 0290 00C0      		rjmp .L56
 204:../../tmk_core/common/action_tapping.c ****                                 .tap = tapping_key.tap,
 711               		.loc 1 204 0
 712 0292 8091 0000 		lds r24,tapping_key
 713 0296 9091 0000 		lds r25,tapping_key+1
 714 029a 9A83      		std Y+2,r25
 715 029c 8983      		std Y+1,r24
 716 029e 1B82      		std Y+3,__zero_reg__
 717 02a0 DD82      		std Y+5,r13
 718 02a2 CC82      		std Y+4,r12
 719 02a4 2E83      		std Y+6,r18
 720 02a6 CE01      		movw r24,r28
 721 02a8 0196      		adiw r24,1
 722 02aa 00C0      		rjmp .L125
 723               	.LVL52:
 724               	.L60:
 725 02ac 8095      		com r24
 726 02ae 9095      		com r25
 228:../../tmk_core/common/action_tapping.c ****             if (event.pressed) {
 727               		.loc 1 228 0 discriminator 2
 728 02b0 8C0D      		add r24,r12
 729 02b2 9D1D      		adc r25,r13
 730 02b4 8C32      		cpi r24,44
 731 02b6 9140      		sbci r25,1
 732 02b8 00F0      		brlo .+2
 733 02ba 00C0      		rjmp .L127
 734               	.L87:
 229:../../tmk_core/common/action_tapping.c ****                 if (IS_TAPPING_KEY(event.key)) {
 735               		.loc 1 229 0
 736 02bc F62E      		mov r15,r22
 737 02be 6623      		tst r22
 738 02c0 01F4      		brne .+2
 739 02c2 00C0      		rjmp .L65
 740               	.LVL53:
 230:../../tmk_core/common/action_tapping.c ****                     if (!tapping_key.tap.interrupted && tapping_key.tap.count > 0) {
 741               		.loc 1 230 0 discriminator 1
 742 02c4 7513      		cpse r23,r21
 743 02c6 00C0      		rjmp .L66
 230:../../tmk_core/common/action_tapping.c ****                     if (!tapping_key.tap.interrupted && tapping_key.tap.count > 0) {
 744               		.loc 1 230 0 is_stmt 0 discriminator 2
 745 02c8 3413      		cpse r19,r20
 746 02ca 00C0      		rjmp .L66
 231:../../tmk_core/common/action_tapping.c ****                         // sequential tap.
 747               		.loc 1 231 0 is_stmt 1
 748 02cc 2091 0000 		lds r18,tapping_key+5
 749 02d0 20FD      		sbrc r18,0
 750 02d2 00C0      		rjmp .L67
 231:../../tmk_core/common/action_tapping.c ****                         // sequential tap.
 751               		.loc 1 231 0 is_stmt 0 discriminator 1
 752 02d4 822F      		mov r24,r18
 753 02d6 8295      		swap r24
 754 02d8 8F70      		andi r24,lo8(15)
 755 02da 01F0      		breq .L67
 233:../../tmk_core/common/action_tapping.c ****                         if (keyp->tap.count < 15) keyp->tap.count += 1;
 756               		.loc 1 233 0 is_stmt 1
 757 02dc D801      		movw r26,r16
 758 02de 1596      		adiw r26,5
 759 02e0 2C93      		st X,r18
 760 02e2 1597      		sbiw r26,5
 234:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Tap press("); debug_dec(keyp->tap.count); debug(")\n");
 761               		.loc 1 234 0
 762 02e4 8F30      		cpi r24,lo8(15)
 763 02e6 01F0      		breq .L68
 234:../../tmk_core/common/action_tapping.c ****                         debug("Tapping: Tap press("); debug_dec(keyp->tap.count); debug(")\n");
 764               		.loc 1 234 0 is_stmt 0 discriminator 1
 765 02e8 8F5F      		subi r24,lo8(-(1))
 766 02ea 982F      		mov r25,r24
 767 02ec 9295      		swap r25
 768 02ee 907F      		andi r25,lo8(-16)
 769 02f0 822F      		mov r24,r18
 770 02f2 8F70      		andi r24,lo8(15)
 771 02f4 892B      		or r24,r25
 772 02f6 1596      		adiw r26,5
 773 02f8 8C93      		st X,r24
 774               	.LVL54:
 775               	.L68:
 236:../../tmk_core/common/action_tapping.c ****                         tapping_key = *keyp;
 776               		.loc 1 236 0 is_stmt 1
 777 02fa C801      		movw r24,r16
 778 02fc 0E94 0000 		call process_action
 779               	.LVL55:
 237:../../tmk_core/common/action_tapping.c ****                         debug_tapping_key();
 780               		.loc 1 237 0
 781 0300 86E0      		ldi r24,lo8(6)
 782 0302 F801      		movw r30,r16
 783 0304 A0E0      		ldi r26,lo8(tapping_key)
 784 0306 B0E0      		ldi r27,hi8(tapping_key)
 785               		0:
 786 0308 0190      		ld r0,Z+
 787 030a 0D92      		st X+,r0
 788 030c 8A95      		dec r24
 789 030e 01F4      		brne 0b
 790 0310 00C0      		rjmp .L130
 791               	.LVL56:
 792               	.L67:
 242:../../tmk_core/common/action_tapping.c ****                         return true;
 793               		.loc 1 242 0
 794 0312 86E0      		ldi r24,lo8(6)
 795 0314 F801      		movw r30,r16
 796 0316 A0E0      		ldi r26,lo8(tapping_key)
 797 0318 B0E0      		ldi r27,hi8(tapping_key)
 798               		0:
 799 031a 0190      		ld r0,Z+
 800 031c 0D92      		st X+,r0
 801 031e 8A95      		dec r24
 802 0320 01F4      		brne 0b
 243:../../tmk_core/common/action_tapping.c ****                     }
 803               		.loc 1 243 0
 804 0322 00C0      		rjmp .L88
 805               	.L66:
 245:../../tmk_core/common/action_tapping.c ****                     // Sequential tap can be interfered with other tap key.
 806               		.loc 1 245 0
 807 0324 4D87      		std Y+13,r20
 808 0326 5E87      		std Y+14,r21
 809 0328 8D85      		ldd r24,Y+13
 810 032a 9E85      		ldd r25,Y+14
 811 032c 0E94 0000 		call is_tap_key
 812               	.LVL57:
 813 0330 8111      		cpse r24,__zero_reg__
 814 0332 00C0      		rjmp .L56
 255:../../tmk_core/common/action_tapping.c ****                     process_action(keyp);
 815               		.loc 1 255 0
 816 0334 8091 0000 		lds r24,tapping_key+5
 817 0338 8160      		ori r24,lo8(1<<0)
 818 033a 8093 0000 		sts tapping_key+5,r24
 256:../../tmk_core/common/action_tapping.c ****                     return true;
 819               		.loc 1 256 0
 820 033e C801      		movw r24,r16
 821 0340 0E94 0000 		call process_action
 822               	.LVL58:
 257:../../tmk_core/common/action_tapping.c ****                 }
 823               		.loc 1 257 0
 824 0344 00C0      		rjmp .L88
 825               	.LVL59:
 826               	.L30:
 276:../../tmk_core/common/action_tapping.c ****             debug("Tapping: Start(Press tap key).\n");
 827               		.loc 1 276 0
 828 0346 6623      		tst r22
 829 0348 01F4      		brne .+2
 830 034a 00C0      		rjmp .L65
 276:../../tmk_core/common/action_tapping.c ****             debug("Tapping: Start(Press tap key).\n");
 831               		.loc 1 276 0 is_stmt 0 discriminator 1
 832 034c 4D87      		std Y+13,r20
 833 034e 5E87      		std Y+14,r21
 834 0350 8D85      		ldd r24,Y+13
 835 0352 9E85      		ldd r25,Y+14
 836 0354 0E94 0000 		call is_tap_key
 837               	.LVL60:
 838 0358 8823      		tst r24
 839 035a 01F4      		brne .+2
 840 035c 00C0      		rjmp .L65
 841 035e 00C0      		rjmp .L56
 842               	.LVL61:
 843               	.L134:
 844               	.LBB29:
 123:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 845               		.loc 1 123 0 is_stmt 1 discriminator 1
 846 0360 8111      		cpse r24,__zero_reg__
 847 0362 00C0      		rjmp .L52
 848 0364 00C0      		rjmp .L88
 849               	.LVL62:
 850               	.L133:
 120:../../tmk_core/common/action_tapping.c ****                         case ACT_LMODS:
 851               		.loc 1 120 0
 852 0366 2430      		cpi r18,4
 853 0368 3105      		cpc r19,__zero_reg__
 854 036a 04F0      		brlt .+2
 855 036c 00C0      		rjmp .L65
 128:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 856               		.loc 1 128 0
 857 036e 9F70      		andi r25,lo8(15)
 858               	.LVL63:
 859 0370 01F4      		brne .+2
 860 0372 00C0      		rjmp .L52
 128:../../tmk_core/common/action_tapping.c ****                             if (IS_MOD(action.key.code)) return false;
 861               		.loc 1 128 0 is_stmt 0 discriminator 1
 862 0374 D801      		movw r26,r16
 863 0376 1596      		adiw r26,5
 864 0378 9C91      		ld r25,X
 865 037a 907F      		andi r25,lo8(-16)
 866 037c 01F0      		breq .+2
 867 037e 00C0      		rjmp .L52
 868               	.LVL64:
 869               	.L88:
 870               	.LBE29:
 287:../../tmk_core/common/action_tapping.c **** 
 871               		.loc 1 287 0 is_stmt 1
 872 0380 8F2D      		mov r24,r15
 873               	.LVL65:
 874               	/* epilogue start */
 875 0382 6296      		adiw r28,18
 876 0384 0FB6      		in __tmp_reg__,__SREG__
 877 0386 F894      		cli
 878 0388 DEBF      		out __SP_H__,r29
 879 038a 0FBE      		out __SREG__,__tmp_reg__
 880 038c CDBF      		out __SP_L__,r28
 881 038e DF91      		pop r29
 882 0390 CF91      		pop r28
 883 0392 1F91      		pop r17
 884 0394 0F91      		pop r16
 885               	.LVL66:
 886 0396 FF90      		pop r15
 887 0398 EF90      		pop r14
 888 039a DF90      		pop r13
 889 039c CF90      		pop r12
 890               	.LVL67:
 891 039e 0895      		ret
 892               		.cfi_endproc
 893               	.LFE5:
 895               		.section	.text.action_tapping_process,"ax",@progbits
 896               	.global	action_tapping_process
 898               	action_tapping_process:
 899               	.LFB4:
  40:../../tmk_core/common/action_tapping.c ****     if (process_tapping(&record)) {
 900               		.loc 1 40 0
 901               		.cfi_startproc
 902 0000 1F93      		push r17
 903               	.LCFI13:
 904               		.cfi_def_cfa_offset 3
 905               		.cfi_offset 17, -2
 906 0002 CF93      		push r28
 907               	.LCFI14:
 908               		.cfi_def_cfa_offset 4
 909               		.cfi_offset 28, -3
 910 0004 DF93      		push r29
 911               	.LCFI15:
 912               		.cfi_def_cfa_offset 5
 913               		.cfi_offset 29, -4
 914 0006 CDB7      		in r28,__SP_L__
 915 0008 DEB7      		in r29,__SP_H__
 916               	.LCFI16:
 917               		.cfi_def_cfa_register 28
 918 000a 2C97      		sbiw r28,12
 919               	.LCFI17:
 920               		.cfi_def_cfa_offset 17
 921 000c 0FB6      		in __tmp_reg__,__SREG__
 922 000e F894      		cli
 923 0010 DEBF      		out __SP_H__,r29
 924 0012 0FBE      		out __SREG__,__tmp_reg__
 925 0014 CDBF      		out __SP_L__,r28
 926               	/* prologue: function */
 927               	/* frame size = 12 */
 928               	/* stack size = 15 */
 929               	.L__stack_usage = 15
 930 0016 4F83      		std Y+7,r20
 931 0018 5887      		std Y+8,r21
 932 001a 6987      		std Y+9,r22
 933 001c 7A87      		std Y+10,r23
 934 001e 8B87      		std Y+11,r24
 935 0020 9C87      		std Y+12,r25
  41:../../tmk_core/common/action_tapping.c ****         if (!IS_NOEVENT(record.event)) {
 936               		.loc 1 41 0
 937 0022 CE01      		movw r24,r28
 938 0024 0796      		adiw r24,7
 939 0026 0E94 0000 		call process_tapping
 940               	.LVL68:
 941 002a 8823      		tst r24
 942 002c 01F0      		breq .L136
 943 002e 8F81      		ldd r24,Y+7
 944 0030 9885      		ldd r25,Y+8
 945               	.LBB38:
 946               	.LBB39:
  49:../../tmk_core/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
 947               		.loc 2 49 0
 948 0032 2A85      		ldd r18,Y+10
 949 0034 3B85      		ldd r19,Y+11
 950 0036 232B      		or r18,r19
 951 0038 01F0      		breq .L137
 952 003a 9F3F      		cpi r25,lo8(-1)
 953 003c 01F0      		breq .+2
 954 003e 00C0      		rjmp .L138
 955 0040 8F3F      		cpi r24,lo8(-1)
 956 0042 01F0      		breq .+2
 957 0044 00C0      		rjmp .L138
 958 0046 00C0      		rjmp .L137
 959               	.L136:
 960 0048 86E0      		ldi r24,lo8(6)
 961 004a FE01      		movw r30,r28
 962 004c 3796      		adiw r30,7
 963 004e DE01      		movw r26,r28
 964 0050 1196      		adiw r26,1
 965               		0:
 966 0052 0190      		ld r0,Z+
 967 0054 0D92      		st X+,r0
 968 0056 8A95      		dec r24
 969 0058 01F4      		brne 0b
 970 005a 6F81      		ldd r22,Y+7
 971               	.LVL69:
 972 005c 7885      		ldd r23,Y+8
 973               	.LVL70:
 974 005e EA85      		ldd r30,Y+10
 975 0060 FB85      		ldd r31,Y+11
 976               	.LVL71:
 977               	.LBE39:
 978               	.LBE38:
 979               	.LBB40:
 980               	.LBB41:
 981               	.LBB42:
 982               	.LBB43:
 983 0062 3097      		sbiw r30,0
 984 0064 01F0      		breq .L137
 985 0066 7F3F      		cpi r23,lo8(-1)
 986 0068 01F4      		brne .L140
 987 006a 6F3F      		cpi r22,lo8(-1)
 988 006c 01F0      		breq .L137
 989               	.L140:
 990               	.LBE43:
 991               	.LBE42:
 299:../../tmk_core/common/action_tapping.c ****         debug("waiting_buffer_enq: Over flow.\n");
 992               		.loc 1 299 0
 993 006e 2091 0000 		lds r18,waiting_buffer_head
 994 0072 30E0      		ldi r19,0
 995 0074 C901      		movw r24,r18
 996 0076 0196      		adiw r24,1
 997 0078 8770      		andi r24,7
 998 007a 9927      		clr r25
 999 007c 4091 0000 		lds r20,waiting_buffer_tail
 1000 0080 50E0      		ldi r21,0
 1001 0082 8417      		cp r24,r20
 1002 0084 9507      		cpc r25,r21
 1003 0086 01F4      		brne .+2
 1004 0088 00C0      		rjmp .L160
 304:../../tmk_core/common/action_tapping.c ****     waiting_buffer_head = (waiting_buffer_head + 1) % WAITING_BUFFER_SIZE;
 1005               		.loc 1 304 0
 1006 008a 6983      		std Y+1,r22
 1007 008c 7A83      		std Y+2,r23
 1008 008e FD83      		std Y+5,r31
 1009 0090 EC83      		std Y+4,r30
 1010 0092 96E0      		ldi r25,lo8(6)
 1011 0094 929F      		mul r25,r18
 1012 0096 D001      		movw r26,r0
 1013 0098 939F      		mul r25,r19
 1014 009a B00D      		add r27,r0
 1015 009c 1124      		clr __zero_reg__
 1016 009e A050      		subi r26,lo8(-(waiting_buffer))
 1017 00a0 B040      		sbci r27,hi8(-(waiting_buffer))
 1018 00a2 FE01      		movw r30,r28
 1019               	.LVL72:
 1020 00a4 3196      		adiw r30,1
 1021               		0:
 1022 00a6 0190      		ld r0,Z+
 1023 00a8 0D92      		st X+,r0
 1024 00aa 9A95      		dec r25
 1025 00ac 01F4      		brne 0b
 305:../../tmk_core/common/action_tapping.c **** 
 1026               		.loc 1 305 0
 1027 00ae 8093 0000 		sts waiting_buffer_head,r24
 307:../../tmk_core/common/action_tapping.c ****     return true;
 1028               		.loc 1 307 0
 1029 00b2 0E94 0000 		call debug_waiting_buffer
 1030               	.LVL73:
 1031               	.L137:
 1032               	.LBE41:
 1033               	.LBE40:
  60:../../tmk_core/common/action_tapping.c ****             debug("processed: waiting_buffer["); debug_dec(waiting_buffer_tail); debug("] = ");
 1034               		.loc 1 60 0 discriminator 1
 1035 00b6 16E0      		ldi r17,lo8(6)
 1036               	.L141:
  59:../../tmk_core/common/action_tapping.c ****         if (process_tapping(&waiting_buffer[waiting_buffer_tail])) {
 1037               		.loc 1 59 0 discriminator 1
 1038 00b8 8091 0000 		lds r24,waiting_buffer_tail
 1039 00bc 9091 0000 		lds r25,waiting_buffer_head
 1040 00c0 8917      		cp r24,r25
 1041 00c2 01F0      		breq .L135
  60:../../tmk_core/common/action_tapping.c ****             debug("processed: waiting_buffer["); debug_dec(waiting_buffer_tail); debug("] = ");
 1042               		.loc 1 60 0
 1043 00c4 189F      		mul r17,r24
 1044 00c6 C001      		movw r24,r0
 1045 00c8 1124      		clr __zero_reg__
 1046 00ca 8050      		subi r24,lo8(-(waiting_buffer))
 1047 00cc 9040      		sbci r25,hi8(-(waiting_buffer))
 1048 00ce 0E94 0000 		call process_tapping
 1049               	.LVL74:
 1050 00d2 8823      		tst r24
 1051 00d4 01F0      		breq .L135
  62:../../tmk_core/common/action_tapping.c ****         } else {
 1052               		.loc 1 62 0
 1053 00d6 E091 0000 		lds r30,waiting_buffer_tail
 1054 00da 1E9F      		mul r17,r30
 1055 00dc F001      		movw r30,r0
 1056 00de 1124      		clr __zero_reg__
 1057 00e0 E050      		subi r30,lo8(-(waiting_buffer))
 1058 00e2 F040      		sbci r31,hi8(-(waiting_buffer))
 1059 00e4 4081      		ld r20,Z
 1060 00e6 5181      		ldd r21,Z+1
 1061 00e8 6281      		ldd r22,Z+2
 1062 00ea 7381      		ldd r23,Z+3
 1063 00ec 8481      		ldd r24,Z+4
 1064 00ee 9581      		ldd r25,Z+5
 1065 00f0 0E94 0000 		call debug_record
 1066               	.LVL75:
  59:../../tmk_core/common/action_tapping.c ****         if (process_tapping(&waiting_buffer[waiting_buffer_tail])) {
 1067               		.loc 1 59 0
 1068 00f4 8091 0000 		lds r24,waiting_buffer_tail
 1069 00f8 90E0      		ldi r25,0
 1070 00fa 0196      		adiw r24,1
 1071 00fc 8770      		andi r24,7
 1072 00fe 9927      		clr r25
 1073 0100 8093 0000 		sts waiting_buffer_tail,r24
 1074 0104 00C0      		rjmp .L141
 1075               	.L138:
  43:../../tmk_core/common/action_tapping.c ****         }
 1076               		.loc 1 43 0
 1077 0106 4F81      		ldd r20,Y+7
 1078 0108 5885      		ldd r21,Y+8
 1079 010a 6985      		ldd r22,Y+9
 1080 010c 7A85      		ldd r23,Y+10
 1081 010e 8B85      		ldd r24,Y+11
 1082 0110 9C85      		ldd r25,Y+12
 1083 0112 0E94 0000 		call debug_record
 1084               	.LVL76:
 1085 0116 00C0      		rjmp .L137
 1086               	.LVL77:
 1087               	.L160:
  49:../../tmk_core/common/action_tapping.c ****             waiting_buffer_clear();
 1088               		.loc 1 49 0
 1089 0118 0E94 0000 		call clear_keyboard
 1090               	.LVL78:
 1091               	.LBB44:
 1092               	.LBB45:
 313:../../tmk_core/common/action_tapping.c ****     waiting_buffer_tail = 0;
 1093               		.loc 1 313 0
 1094 011c 1092 0000 		sts waiting_buffer_head,__zero_reg__
 314:../../tmk_core/common/action_tapping.c **** }
 1095               		.loc 1 314 0
 1096 0120 1092 0000 		sts waiting_buffer_tail,__zero_reg__
 1097               	.LBE45:
 1098               	.LBE44:
  51:../../tmk_core/common/action_tapping.c ****         }
 1099               		.loc 1 51 0
 1100 0124 E0E0      		ldi r30,lo8(tapping_key)
 1101 0126 F0E0      		ldi r31,hi8(tapping_key)
 1102 0128 86E0      		ldi r24,lo8(6)
 1103 012a DF01      		movw r26,r30
 1104               		0:
 1105 012c 1D92      		st X+,__zero_reg__
 1106 012e 8A95      		dec r24
 1107 0130 01F4      		brne 0b
 1108 0132 00C0      		rjmp .L137
 1109               	.L135:
 1110               	/* epilogue start */
  70:../../tmk_core/common/action_tapping.c **** 
 1111               		.loc 1 70 0
 1112 0134 2C96      		adiw r28,12
 1113 0136 0FB6      		in __tmp_reg__,__SREG__
 1114 0138 F894      		cli
 1115 013a DEBF      		out __SP_H__,r29
 1116 013c 0FBE      		out __SREG__,__tmp_reg__
 1117 013e CDBF      		out __SP_L__,r28
 1118 0140 DF91      		pop r29
 1119 0142 CF91      		pop r28
 1120 0144 1F91      		pop r17
 1121 0146 0895      		ret
 1122               		.cfi_endproc
 1123               	.LFE4:
 1125               		.section	.bss.waiting_buffer_tail,"aw",@nobits
 1128               	waiting_buffer_tail:
 1129 0000 00        		.zero	1
 1130               		.section	.bss.waiting_buffer_head,"aw",@nobits
 1133               	waiting_buffer_head:
 1134 0000 00        		.zero	1
 1135               		.section	.bss.waiting_buffer,"aw",@nobits
 1138               	waiting_buffer:
 1139 0000 0000 0000 		.zero	48
 1139      0000 0000 
 1139      0000 0000 
 1139      0000 0000 
 1139      0000 0000 
 1140               		.section	.bss.tapping_key,"aw",@nobits
 1143               	tapping_key:
 1144 0000 0000 0000 		.zero	6
 1144      0000 
 1145               		.text
 1146               	.Letext0:
 1147               		.file 3 "/usr/lib/avr/include/stdint.h"
 1148               		.file 4 "../../tmk_core/common/keycode.h"
 1149               		.file 5 "../../tmk_core/common/action_code.h"
 1150               		.file 6 "../../tmk_core/common/action.h"
 1151               		.file 7 "../../tmk_core/common/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_tapping.c
     /tmp/ccq9SZ1s.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccq9SZ1s.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccq9SZ1s.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccq9SZ1s.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccq9SZ1s.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccq9SZ1s.s:12     .text.debug_waiting_buffer:0000000000000000 debug_waiting_buffer
     /tmp/ccq9SZ1s.s:1128   .bss.waiting_buffer_tail:0000000000000000 waiting_buffer_tail
     /tmp/ccq9SZ1s.s:1133   .bss.waiting_buffer_head:0000000000000000 waiting_buffer_head
     /tmp/ccq9SZ1s.s:1138   .bss.waiting_buffer:0000000000000000 waiting_buffer
     /tmp/ccq9SZ1s.s:82     .text.debug_tapping_key:0000000000000000 debug_tapping_key
     /tmp/ccq9SZ1s.s:1143   .bss.tapping_key:0000000000000000 tapping_key
     /tmp/ccq9SZ1s.s:104    .text.waiting_buffer_scan_tap:0000000000000000 waiting_buffer_scan_tap
     /tmp/ccq9SZ1s.s:231    .text.process_tapping:0000000000000000 process_tapping
     /tmp/ccq9SZ1s.s:898    .text.action_tapping_process:0000000000000000 action_tapping_process

UNDEFINED SYMBOLS
debug_record
process_action
debug_event
is_tap_key
layer_switch_get_action
clear_keyboard
__do_clear_bss
